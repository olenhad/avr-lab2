
lab22.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00001352  000013c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001352  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         000006cc  00000000  00000000  000013d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00001a9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000160  00000000  00000000  00001b21  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001ac  00000000  00000000  00001c81  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f3e  00000000  00000000  00001e2d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00003d6b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001508  00000000  00000000  00004c56  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b0  00000000  00000000  00006160  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000384  00000000  00000000  00006310  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a79  00000000  00000000  00006694  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 00000588  00000000  00000000  0000710d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000030  00000000  00000000  00007695  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e2 e5       	ldi	r30, 0x52	; 82
      7c:	f3 e1       	ldi	r31, 0x13	; 19
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a8 30       	cpi	r26, 0x08	; 8
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
      8a:	0e 94 46 03 	call	0x68c	; 0x68c <main>
      8e:	0c 94 a7 09 	jmp	0x134e	; 0x134e <_exit>

00000092 <__bad_interrupt>:
      92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <pulse>:
 */ 
#define F_CPU 16000000
#include <avr/io.h>
#include <util/delay.h>
void pulse()
{
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	df 93       	push	r29
      9c:	cf 93       	push	r28
      9e:	cd b7       	in	r28, 0x3d	; 61
      a0:	de b7       	in	r29, 0x3e	; 62
      a2:	6c 97       	sbiw	r28, 0x1c	; 28
      a4:	0f b6       	in	r0, 0x3f	; 63
      a6:	f8 94       	cli
      a8:	de bf       	out	0x3e, r29	; 62
      aa:	0f be       	out	0x3f, r0	; 63
      ac:	cd bf       	out	0x3d, r28	; 61
	PORTD|=0b00001000;
      ae:	8b e2       	ldi	r24, 0x2B	; 43
      b0:	90 e0       	ldi	r25, 0x00	; 0
      b2:	2b e2       	ldi	r18, 0x2B	; 43
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	f9 01       	movw	r30, r18
      b8:	20 81       	ld	r18, Z
      ba:	28 60       	ori	r18, 0x08	; 8
      bc:	fc 01       	movw	r30, r24
      be:	20 83       	st	Z, r18
      c0:	80 e0       	ldi	r24, 0x00	; 0
      c2:	90 e0       	ldi	r25, 0x00	; 0
      c4:	a0 e8       	ldi	r26, 0x80	; 128
      c6:	bf e3       	ldi	r27, 0x3F	; 63
      c8:	89 83       	std	Y+1, r24	; 0x01
      ca:	9a 83       	std	Y+2, r25	; 0x02
      cc:	ab 83       	std	Y+3, r26	; 0x03
      ce:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
      d0:	69 81       	ldd	r22, Y+1	; 0x01
      d2:	7a 81       	ldd	r23, Y+2	; 0x02
      d4:	8b 81       	ldd	r24, Y+3	; 0x03
      d6:	9c 81       	ldd	r25, Y+4	; 0x04
      d8:	20 e0       	ldi	r18, 0x00	; 0
      da:	30 e0       	ldi	r19, 0x00	; 0
      dc:	4a e7       	ldi	r20, 0x7A	; 122
      de:	55 e4       	ldi	r21, 0x45	; 69
      e0:	0e 94 dd 05 	call	0xbba	; 0xbba <__mulsf3>
      e4:	dc 01       	movw	r26, r24
      e6:	cb 01       	movw	r24, r22
      e8:	8d 83       	std	Y+5, r24	; 0x05
      ea:	9e 83       	std	Y+6, r25	; 0x06
      ec:	af 83       	std	Y+7, r26	; 0x07
      ee:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
      f0:	11 e0       	ldi	r17, 0x01	; 1
      f2:	6d 81       	ldd	r22, Y+5	; 0x05
      f4:	7e 81       	ldd	r23, Y+6	; 0x06
      f6:	8f 81       	ldd	r24, Y+7	; 0x07
      f8:	98 85       	ldd	r25, Y+8	; 0x08
      fa:	20 e0       	ldi	r18, 0x00	; 0
      fc:	30 e0       	ldi	r19, 0x00	; 0
      fe:	40 e8       	ldi	r20, 0x80	; 128
     100:	5f e3       	ldi	r21, 0x3F	; 63
     102:	0e 94 37 07 	call	0xe6e	; 0xe6e <__ltsf2>
     106:	88 23       	and	r24, r24
     108:	0c f0       	brlt	.+2      	; 0x10c <pulse+0x76>
     10a:	10 e0       	ldi	r17, 0x00	; 0
     10c:	11 23       	and	r17, r17
     10e:	29 f0       	breq	.+10     	; 0x11a <pulse+0x84>
		__ticks = 1;
     110:	81 e0       	ldi	r24, 0x01	; 1
     112:	90 e0       	ldi	r25, 0x00	; 0
     114:	9a 87       	std	Y+10, r25	; 0x0a
     116:	89 87       	std	Y+9, r24	; 0x09
     118:	46 c0       	rjmp	.+140    	; 0x1a6 <pulse+0x110>
	else if (__tmp > 65535)
     11a:	11 e0       	ldi	r17, 0x01	; 1
     11c:	6d 81       	ldd	r22, Y+5	; 0x05
     11e:	7e 81       	ldd	r23, Y+6	; 0x06
     120:	8f 81       	ldd	r24, Y+7	; 0x07
     122:	98 85       	ldd	r25, Y+8	; 0x08
     124:	20 e0       	ldi	r18, 0x00	; 0
     126:	3f ef       	ldi	r19, 0xFF	; 255
     128:	4f e7       	ldi	r20, 0x7F	; 127
     12a:	57 e4       	ldi	r21, 0x47	; 71
     12c:	0e 94 d7 06 	call	0xdae	; 0xdae <__gtsf2>
     130:	18 16       	cp	r1, r24
     132:	0c f0       	brlt	.+2      	; 0x136 <pulse+0xa0>
     134:	10 e0       	ldi	r17, 0x00	; 0
     136:	11 23       	and	r17, r17
     138:	61 f1       	breq	.+88     	; 0x192 <pulse+0xfc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     13a:	69 81       	ldd	r22, Y+1	; 0x01
     13c:	7a 81       	ldd	r23, Y+2	; 0x02
     13e:	8b 81       	ldd	r24, Y+3	; 0x03
     140:	9c 81       	ldd	r25, Y+4	; 0x04
     142:	20 e0       	ldi	r18, 0x00	; 0
     144:	30 e0       	ldi	r19, 0x00	; 0
     146:	40 e2       	ldi	r20, 0x20	; 32
     148:	51 e4       	ldi	r21, 0x41	; 65
     14a:	0e 94 dd 05 	call	0xbba	; 0xbba <__mulsf3>
     14e:	dc 01       	movw	r26, r24
     150:	cb 01       	movw	r24, r22
     152:	bc 01       	movw	r22, r24
     154:	cd 01       	movw	r24, r26
     156:	0e 94 09 04 	call	0x812	; 0x812 <__fixunssfsi>
     15a:	dc 01       	movw	r26, r24
     15c:	cb 01       	movw	r24, r22
     15e:	9a 87       	std	Y+10, r25	; 0x0a
     160:	89 87       	std	Y+9, r24	; 0x09
     162:	12 c0       	rjmp	.+36     	; 0x188 <pulse+0xf2>
     164:	80 e9       	ldi	r24, 0x90	; 144
     166:	91 e0       	ldi	r25, 0x01	; 1
     168:	9c 87       	std	Y+12, r25	; 0x0c
     16a:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     16c:	8b 85       	ldd	r24, Y+11	; 0x0b
     16e:	9c 85       	ldd	r25, Y+12	; 0x0c
     170:	8c 01       	movw	r16, r24
     172:	c8 01       	movw	r24, r16
     174:	01 97       	sbiw	r24, 0x01	; 1
     176:	f1 f7       	brne	.-4      	; 0x174 <pulse+0xde>
     178:	8c 01       	movw	r16, r24
     17a:	1c 87       	std	Y+12, r17	; 0x0c
     17c:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     17e:	89 85       	ldd	r24, Y+9	; 0x09
     180:	9a 85       	ldd	r25, Y+10	; 0x0a
     182:	01 97       	sbiw	r24, 0x01	; 1
     184:	9a 87       	std	Y+10, r25	; 0x0a
     186:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     188:	89 85       	ldd	r24, Y+9	; 0x09
     18a:	9a 85       	ldd	r25, Y+10	; 0x0a
     18c:	00 97       	sbiw	r24, 0x00	; 0
     18e:	51 f7       	brne	.-44     	; 0x164 <pulse+0xce>
     190:	17 c0       	rjmp	.+46     	; 0x1c0 <pulse+0x12a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     192:	6d 81       	ldd	r22, Y+5	; 0x05
     194:	7e 81       	ldd	r23, Y+6	; 0x06
     196:	8f 81       	ldd	r24, Y+7	; 0x07
     198:	98 85       	ldd	r25, Y+8	; 0x08
     19a:	0e 94 09 04 	call	0x812	; 0x812 <__fixunssfsi>
     19e:	dc 01       	movw	r26, r24
     1a0:	cb 01       	movw	r24, r22
     1a2:	9a 87       	std	Y+10, r25	; 0x0a
     1a4:	89 87       	std	Y+9, r24	; 0x09
     1a6:	89 85       	ldd	r24, Y+9	; 0x09
     1a8:	9a 85       	ldd	r25, Y+10	; 0x0a
     1aa:	9e 87       	std	Y+14, r25	; 0x0e
     1ac:	8d 87       	std	Y+13, r24	; 0x0d
     1ae:	8d 85       	ldd	r24, Y+13	; 0x0d
     1b0:	9e 85       	ldd	r25, Y+14	; 0x0e
     1b2:	8c 01       	movw	r16, r24
     1b4:	f8 01       	movw	r30, r16
     1b6:	31 97       	sbiw	r30, 0x01	; 1
     1b8:	f1 f7       	brne	.-4      	; 0x1b6 <pulse+0x120>
     1ba:	8f 01       	movw	r16, r30
     1bc:	1e 87       	std	Y+14, r17	; 0x0e
     1be:	0d 87       	std	Y+13, r16	; 0x0d
	_delay_ms(1);
	PORTD &=0b11110111;
     1c0:	8b e2       	ldi	r24, 0x2B	; 43
     1c2:	90 e0       	ldi	r25, 0x00	; 0
     1c4:	2b e2       	ldi	r18, 0x2B	; 43
     1c6:	30 e0       	ldi	r19, 0x00	; 0
     1c8:	f9 01       	movw	r30, r18
     1ca:	20 81       	ld	r18, Z
     1cc:	27 7f       	andi	r18, 0xF7	; 247
     1ce:	fc 01       	movw	r30, r24
     1d0:	20 83       	st	Z, r18
     1d2:	80 e0       	ldi	r24, 0x00	; 0
     1d4:	90 e0       	ldi	r25, 0x00	; 0
     1d6:	a0 e8       	ldi	r26, 0x80	; 128
     1d8:	bf e3       	ldi	r27, 0x3F	; 63
     1da:	8f 87       	std	Y+15, r24	; 0x0f
     1dc:	98 8b       	std	Y+16, r25	; 0x10
     1de:	a9 8b       	std	Y+17, r26	; 0x11
     1e0:	ba 8b       	std	Y+18, r27	; 0x12
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     1e2:	6f 85       	ldd	r22, Y+15	; 0x0f
     1e4:	78 89       	ldd	r23, Y+16	; 0x10
     1e6:	89 89       	ldd	r24, Y+17	; 0x11
     1e8:	9a 89       	ldd	r25, Y+18	; 0x12
     1ea:	20 e0       	ldi	r18, 0x00	; 0
     1ec:	30 e0       	ldi	r19, 0x00	; 0
     1ee:	4a e7       	ldi	r20, 0x7A	; 122
     1f0:	55 e4       	ldi	r21, 0x45	; 69
     1f2:	0e 94 dd 05 	call	0xbba	; 0xbba <__mulsf3>
     1f6:	dc 01       	movw	r26, r24
     1f8:	cb 01       	movw	r24, r22
     1fa:	8b 8b       	std	Y+19, r24	; 0x13
     1fc:	9c 8b       	std	Y+20, r25	; 0x14
     1fe:	ad 8b       	std	Y+21, r26	; 0x15
     200:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     202:	11 e0       	ldi	r17, 0x01	; 1
     204:	6b 89       	ldd	r22, Y+19	; 0x13
     206:	7c 89       	ldd	r23, Y+20	; 0x14
     208:	8d 89       	ldd	r24, Y+21	; 0x15
     20a:	9e 89       	ldd	r25, Y+22	; 0x16
     20c:	20 e0       	ldi	r18, 0x00	; 0
     20e:	30 e0       	ldi	r19, 0x00	; 0
     210:	40 e8       	ldi	r20, 0x80	; 128
     212:	5f e3       	ldi	r21, 0x3F	; 63
     214:	0e 94 37 07 	call	0xe6e	; 0xe6e <__ltsf2>
     218:	88 23       	and	r24, r24
     21a:	0c f0       	brlt	.+2      	; 0x21e <pulse+0x188>
     21c:	10 e0       	ldi	r17, 0x00	; 0
     21e:	11 23       	and	r17, r17
     220:	29 f0       	breq	.+10     	; 0x22c <pulse+0x196>
		__ticks = 1;
     222:	81 e0       	ldi	r24, 0x01	; 1
     224:	90 e0       	ldi	r25, 0x00	; 0
     226:	98 8f       	std	Y+24, r25	; 0x18
     228:	8f 8b       	std	Y+23, r24	; 0x17
     22a:	46 c0       	rjmp	.+140    	; 0x2b8 <pulse+0x222>
	else if (__tmp > 65535)
     22c:	11 e0       	ldi	r17, 0x01	; 1
     22e:	6b 89       	ldd	r22, Y+19	; 0x13
     230:	7c 89       	ldd	r23, Y+20	; 0x14
     232:	8d 89       	ldd	r24, Y+21	; 0x15
     234:	9e 89       	ldd	r25, Y+22	; 0x16
     236:	20 e0       	ldi	r18, 0x00	; 0
     238:	3f ef       	ldi	r19, 0xFF	; 255
     23a:	4f e7       	ldi	r20, 0x7F	; 127
     23c:	57 e4       	ldi	r21, 0x47	; 71
     23e:	0e 94 d7 06 	call	0xdae	; 0xdae <__gtsf2>
     242:	18 16       	cp	r1, r24
     244:	0c f0       	brlt	.+2      	; 0x248 <pulse+0x1b2>
     246:	10 e0       	ldi	r17, 0x00	; 0
     248:	11 23       	and	r17, r17
     24a:	61 f1       	breq	.+88     	; 0x2a4 <pulse+0x20e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     24c:	6f 85       	ldd	r22, Y+15	; 0x0f
     24e:	78 89       	ldd	r23, Y+16	; 0x10
     250:	89 89       	ldd	r24, Y+17	; 0x11
     252:	9a 89       	ldd	r25, Y+18	; 0x12
     254:	20 e0       	ldi	r18, 0x00	; 0
     256:	30 e0       	ldi	r19, 0x00	; 0
     258:	40 e2       	ldi	r20, 0x20	; 32
     25a:	51 e4       	ldi	r21, 0x41	; 65
     25c:	0e 94 dd 05 	call	0xbba	; 0xbba <__mulsf3>
     260:	dc 01       	movw	r26, r24
     262:	cb 01       	movw	r24, r22
     264:	bc 01       	movw	r22, r24
     266:	cd 01       	movw	r24, r26
     268:	0e 94 09 04 	call	0x812	; 0x812 <__fixunssfsi>
     26c:	dc 01       	movw	r26, r24
     26e:	cb 01       	movw	r24, r22
     270:	98 8f       	std	Y+24, r25	; 0x18
     272:	8f 8b       	std	Y+23, r24	; 0x17
     274:	12 c0       	rjmp	.+36     	; 0x29a <pulse+0x204>
     276:	80 e9       	ldi	r24, 0x90	; 144
     278:	91 e0       	ldi	r25, 0x01	; 1
     27a:	9a 8f       	std	Y+26, r25	; 0x1a
     27c:	89 8f       	std	Y+25, r24	; 0x19
     27e:	89 8d       	ldd	r24, Y+25	; 0x19
     280:	9a 8d       	ldd	r25, Y+26	; 0x1a
     282:	8c 01       	movw	r16, r24
     284:	c8 01       	movw	r24, r16
     286:	01 97       	sbiw	r24, 0x01	; 1
     288:	f1 f7       	brne	.-4      	; 0x286 <pulse+0x1f0>
     28a:	8c 01       	movw	r16, r24
     28c:	1a 8f       	std	Y+26, r17	; 0x1a
     28e:	09 8f       	std	Y+25, r16	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     290:	8f 89       	ldd	r24, Y+23	; 0x17
     292:	98 8d       	ldd	r25, Y+24	; 0x18
     294:	01 97       	sbiw	r24, 0x01	; 1
     296:	98 8f       	std	Y+24, r25	; 0x18
     298:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     29a:	8f 89       	ldd	r24, Y+23	; 0x17
     29c:	98 8d       	ldd	r25, Y+24	; 0x18
     29e:	00 97       	sbiw	r24, 0x00	; 0
     2a0:	51 f7       	brne	.-44     	; 0x276 <pulse+0x1e0>
     2a2:	17 c0       	rjmp	.+46     	; 0x2d2 <pulse+0x23c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2a4:	6b 89       	ldd	r22, Y+19	; 0x13
     2a6:	7c 89       	ldd	r23, Y+20	; 0x14
     2a8:	8d 89       	ldd	r24, Y+21	; 0x15
     2aa:	9e 89       	ldd	r25, Y+22	; 0x16
     2ac:	0e 94 09 04 	call	0x812	; 0x812 <__fixunssfsi>
     2b0:	dc 01       	movw	r26, r24
     2b2:	cb 01       	movw	r24, r22
     2b4:	98 8f       	std	Y+24, r25	; 0x18
     2b6:	8f 8b       	std	Y+23, r24	; 0x17
     2b8:	8f 89       	ldd	r24, Y+23	; 0x17
     2ba:	98 8d       	ldd	r25, Y+24	; 0x18
     2bc:	9c 8f       	std	Y+28, r25	; 0x1c
     2be:	8b 8f       	std	Y+27, r24	; 0x1b
     2c0:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2c2:	9c 8d       	ldd	r25, Y+28	; 0x1c
     2c4:	8c 01       	movw	r16, r24
     2c6:	f8 01       	movw	r30, r16
     2c8:	31 97       	sbiw	r30, 0x01	; 1
     2ca:	f1 f7       	brne	.-4      	; 0x2c8 <pulse+0x232>
     2cc:	8f 01       	movw	r16, r30
     2ce:	1c 8f       	std	Y+28, r17	; 0x1c
     2d0:	0b 8f       	std	Y+27, r16	; 0x1b
	_delay_ms(1);
}
     2d2:	6c 96       	adiw	r28, 0x1c	; 28
     2d4:	0f b6       	in	r0, 0x3f	; 63
     2d6:	f8 94       	cli
     2d8:	de bf       	out	0x3e, r29	; 62
     2da:	0f be       	out	0x3f, r0	; 63
     2dc:	cd bf       	out	0x3d, r28	; 61
     2de:	cf 91       	pop	r28
     2e0:	df 91       	pop	r29
     2e2:	1f 91       	pop	r17
     2e4:	0f 91       	pop	r16
     2e6:	08 95       	ret

000002e8 <writeLED>:
void writeLED(uint8_t num)
{
     2e8:	df 93       	push	r29
     2ea:	cf 93       	push	r28
     2ec:	00 d0       	rcall	.+0      	; 0x2ee <writeLED+0x6>
     2ee:	00 d0       	rcall	.+0      	; 0x2f0 <writeLED+0x8>
     2f0:	0f 92       	push	r0
     2f2:	cd b7       	in	r28, 0x3d	; 61
     2f4:	de b7       	in	r29, 0x3e	; 62
     2f6:	8d 83       	std	Y+5, r24	; 0x05
	PORTD &=0b11101111;
     2f8:	8b e2       	ldi	r24, 0x2B	; 43
     2fa:	90 e0       	ldi	r25, 0x00	; 0
     2fc:	2b e2       	ldi	r18, 0x2B	; 43
     2fe:	30 e0       	ldi	r19, 0x00	; 0
     300:	f9 01       	movw	r30, r18
     302:	20 81       	ld	r18, Z
     304:	2f 7e       	andi	r18, 0xEF	; 239
     306:	fc 01       	movw	r30, r24
     308:	20 83       	st	Z, r18
	int i = 0;
     30a:	1a 82       	std	Y+2, r1	; 0x02
     30c:	19 82       	std	Y+1, r1	; 0x01
     30e:	01 c0       	rjmp	.+2      	; 0x312 <writeLED+0x2a>
		else
			PORTD &=0b11111011;
		pulse();
		if(num==0)
			break;		
	}
     310:	00 00       	nop
void writeLED(uint8_t num)
{
	PORTD &=0b11101111;
	int i = 0;
	while(num>=0){
		i++;
     312:	89 81       	ldd	r24, Y+1	; 0x01
     314:	9a 81       	ldd	r25, Y+2	; 0x02
     316:	01 96       	adiw	r24, 0x01	; 1
     318:	9a 83       	std	Y+2, r25	; 0x02
     31a:	89 83       	std	Y+1, r24	; 0x01
		int cur_bit = num%2;
     31c:	8d 81       	ldd	r24, Y+5	; 0x05
     31e:	88 2f       	mov	r24, r24
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	81 70       	andi	r24, 0x01	; 1
     324:	90 70       	andi	r25, 0x00	; 0
     326:	9c 83       	std	Y+4, r25	; 0x04
     328:	8b 83       	std	Y+3, r24	; 0x03
		num=num/2;
     32a:	8d 81       	ldd	r24, Y+5	; 0x05
     32c:	86 95       	lsr	r24
     32e:	8d 83       	std	Y+5, r24	; 0x05
		if(cur_bit){
     330:	8b 81       	ldd	r24, Y+3	; 0x03
     332:	9c 81       	ldd	r25, Y+4	; 0x04
     334:	00 97       	sbiw	r24, 0x00	; 0
     336:	51 f0       	breq	.+20     	; 0x34c <writeLED+0x64>
			PORTD |=0b00000100;
     338:	8b e2       	ldi	r24, 0x2B	; 43
     33a:	90 e0       	ldi	r25, 0x00	; 0
     33c:	2b e2       	ldi	r18, 0x2B	; 43
     33e:	30 e0       	ldi	r19, 0x00	; 0
     340:	f9 01       	movw	r30, r18
     342:	20 81       	ld	r18, Z
     344:	24 60       	ori	r18, 0x04	; 4
     346:	fc 01       	movw	r30, r24
     348:	20 83       	st	Z, r18
     34a:	09 c0       	rjmp	.+18     	; 0x35e <writeLED+0x76>
		}
		else
			PORTD &=0b11111011;
     34c:	8b e2       	ldi	r24, 0x2B	; 43
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	2b e2       	ldi	r18, 0x2B	; 43
     352:	30 e0       	ldi	r19, 0x00	; 0
     354:	f9 01       	movw	r30, r18
     356:	20 81       	ld	r18, Z
     358:	2b 7f       	andi	r18, 0xFB	; 251
     35a:	fc 01       	movw	r30, r24
     35c:	20 83       	st	Z, r18
		pulse();
     35e:	0e 94 4b 00 	call	0x96	; 0x96 <pulse>
		if(num==0)
     362:	8d 81       	ldd	r24, Y+5	; 0x05
     364:	88 23       	and	r24, r24
     366:	a1 f6       	brne	.-88     	; 0x310 <writeLED+0x28>
			break;		
	}
	while (i<8) {
     368:	10 c0       	rjmp	.+32     	; 0x38a <writeLED+0xa2>
		i++;
     36a:	89 81       	ldd	r24, Y+1	; 0x01
     36c:	9a 81       	ldd	r25, Y+2	; 0x02
     36e:	01 96       	adiw	r24, 0x01	; 1
     370:	9a 83       	std	Y+2, r25	; 0x02
     372:	89 83       	std	Y+1, r24	; 0x01
		PORTD &= 0b11111011;
     374:	8b e2       	ldi	r24, 0x2B	; 43
     376:	90 e0       	ldi	r25, 0x00	; 0
     378:	2b e2       	ldi	r18, 0x2B	; 43
     37a:	30 e0       	ldi	r19, 0x00	; 0
     37c:	f9 01       	movw	r30, r18
     37e:	20 81       	ld	r18, Z
     380:	2b 7f       	andi	r18, 0xFB	; 251
     382:	fc 01       	movw	r30, r24
     384:	20 83       	st	Z, r18
		pulse();
     386:	0e 94 4b 00 	call	0x96	; 0x96 <pulse>
			PORTD &=0b11111011;
		pulse();
		if(num==0)
			break;		
	}
	while (i<8) {
     38a:	89 81       	ldd	r24, Y+1	; 0x01
     38c:	9a 81       	ldd	r25, Y+2	; 0x02
     38e:	88 30       	cpi	r24, 0x08	; 8
     390:	91 05       	cpc	r25, r1
     392:	5c f3       	brlt	.-42     	; 0x36a <writeLED+0x82>
		i++;
		PORTD &= 0b11111011;
		pulse();
	}
	PORTD |=0b00010000;
     394:	8b e2       	ldi	r24, 0x2B	; 43
     396:	90 e0       	ldi	r25, 0x00	; 0
     398:	2b e2       	ldi	r18, 0x2B	; 43
     39a:	30 e0       	ldi	r19, 0x00	; 0
     39c:	f9 01       	movw	r30, r18
     39e:	20 81       	ld	r18, Z
     3a0:	20 61       	ori	r18, 0x10	; 16
     3a2:	fc 01       	movw	r30, r24
     3a4:	20 83       	st	Z, r18
}
     3a6:	0f 90       	pop	r0
     3a8:	0f 90       	pop	r0
     3aa:	0f 90       	pop	r0
     3ac:	0f 90       	pop	r0
     3ae:	0f 90       	pop	r0
     3b0:	cf 91       	pop	r28
     3b2:	df 91       	pop	r29
     3b4:	08 95       	ret

000003b6 <flash>:

void flash() {
     3b6:	0f 93       	push	r16
     3b8:	1f 93       	push	r17
     3ba:	df 93       	push	r29
     3bc:	cf 93       	push	r28
     3be:	cd b7       	in	r28, 0x3d	; 61
     3c0:	de b7       	in	r29, 0x3e	; 62
     3c2:	6e 97       	sbiw	r28, 0x1e	; 30
     3c4:	0f b6       	in	r0, 0x3f	; 63
     3c6:	f8 94       	cli
     3c8:	de bf       	out	0x3e, r29	; 62
     3ca:	0f be       	out	0x3f, r0	; 63
     3cc:	cd bf       	out	0x3d, r28	; 61
	//BOOBIES
	int i = 0;
     3ce:	1a 82       	std	Y+2, r1	; 0x02
     3d0:	19 82       	std	Y+1, r1	; 0x01
	
	PORTD &=0b11101111;
     3d2:	8b e2       	ldi	r24, 0x2B	; 43
     3d4:	90 e0       	ldi	r25, 0x00	; 0
     3d6:	2b e2       	ldi	r18, 0x2B	; 43
     3d8:	30 e0       	ldi	r19, 0x00	; 0
     3da:	f9 01       	movw	r30, r18
     3dc:	20 81       	ld	r18, Z
     3de:	2f 7e       	andi	r18, 0xEF	; 239
     3e0:	fc 01       	movw	r30, r24
     3e2:	20 83       	st	Z, r18
	while (i<8) {
     3e4:	10 c0       	rjmp	.+32     	; 0x406 <flash+0x50>
		i++;
     3e6:	89 81       	ldd	r24, Y+1	; 0x01
     3e8:	9a 81       	ldd	r25, Y+2	; 0x02
     3ea:	01 96       	adiw	r24, 0x01	; 1
     3ec:	9a 83       	std	Y+2, r25	; 0x02
     3ee:	89 83       	std	Y+1, r24	; 0x01
		PORTD &= 0b11111011;
     3f0:	8b e2       	ldi	r24, 0x2B	; 43
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	2b e2       	ldi	r18, 0x2B	; 43
     3f6:	30 e0       	ldi	r19, 0x00	; 0
     3f8:	f9 01       	movw	r30, r18
     3fa:	20 81       	ld	r18, Z
     3fc:	2b 7f       	andi	r18, 0xFB	; 251
     3fe:	fc 01       	movw	r30, r24
     400:	20 83       	st	Z, r18
		pulse();
     402:	0e 94 4b 00 	call	0x96	; 0x96 <pulse>
void flash() {
	//BOOBIES
	int i = 0;
	
	PORTD &=0b11101111;
	while (i<8) {
     406:	89 81       	ldd	r24, Y+1	; 0x01
     408:	9a 81       	ldd	r25, Y+2	; 0x02
     40a:	88 30       	cpi	r24, 0x08	; 8
     40c:	91 05       	cpc	r25, r1
     40e:	5c f3       	brlt	.-42     	; 0x3e6 <flash+0x30>
		i++;
		PORTD &= 0b11111011;
		pulse();
	}
	PORTD |=0b00010000;
     410:	8b e2       	ldi	r24, 0x2B	; 43
     412:	90 e0       	ldi	r25, 0x00	; 0
     414:	2b e2       	ldi	r18, 0x2B	; 43
     416:	30 e0       	ldi	r19, 0x00	; 0
     418:	f9 01       	movw	r30, r18
     41a:	20 81       	ld	r18, Z
     41c:	20 61       	ori	r18, 0x10	; 16
     41e:	fc 01       	movw	r30, r24
     420:	20 83       	st	Z, r18
     422:	80 e0       	ldi	r24, 0x00	; 0
     424:	90 e0       	ldi	r25, 0x00	; 0
     426:	aa ef       	ldi	r26, 0xFA	; 250
     428:	b3 e4       	ldi	r27, 0x43	; 67
     42a:	8b 83       	std	Y+3, r24	; 0x03
     42c:	9c 83       	std	Y+4, r25	; 0x04
     42e:	ad 83       	std	Y+5, r26	; 0x05
     430:	be 83       	std	Y+6, r27	; 0x06
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     432:	6b 81       	ldd	r22, Y+3	; 0x03
     434:	7c 81       	ldd	r23, Y+4	; 0x04
     436:	8d 81       	ldd	r24, Y+5	; 0x05
     438:	9e 81       	ldd	r25, Y+6	; 0x06
     43a:	20 e0       	ldi	r18, 0x00	; 0
     43c:	30 e0       	ldi	r19, 0x00	; 0
     43e:	4a e7       	ldi	r20, 0x7A	; 122
     440:	55 e4       	ldi	r21, 0x45	; 69
     442:	0e 94 dd 05 	call	0xbba	; 0xbba <__mulsf3>
     446:	dc 01       	movw	r26, r24
     448:	cb 01       	movw	r24, r22
     44a:	8f 83       	std	Y+7, r24	; 0x07
     44c:	98 87       	std	Y+8, r25	; 0x08
     44e:	a9 87       	std	Y+9, r26	; 0x09
     450:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     452:	11 e0       	ldi	r17, 0x01	; 1
     454:	6f 81       	ldd	r22, Y+7	; 0x07
     456:	78 85       	ldd	r23, Y+8	; 0x08
     458:	89 85       	ldd	r24, Y+9	; 0x09
     45a:	9a 85       	ldd	r25, Y+10	; 0x0a
     45c:	20 e0       	ldi	r18, 0x00	; 0
     45e:	30 e0       	ldi	r19, 0x00	; 0
     460:	40 e8       	ldi	r20, 0x80	; 128
     462:	5f e3       	ldi	r21, 0x3F	; 63
     464:	0e 94 37 07 	call	0xe6e	; 0xe6e <__ltsf2>
     468:	88 23       	and	r24, r24
     46a:	0c f0       	brlt	.+2      	; 0x46e <flash+0xb8>
     46c:	10 e0       	ldi	r17, 0x00	; 0
     46e:	11 23       	and	r17, r17
     470:	29 f0       	breq	.+10     	; 0x47c <flash+0xc6>
		__ticks = 1;
     472:	81 e0       	ldi	r24, 0x01	; 1
     474:	90 e0       	ldi	r25, 0x00	; 0
     476:	9c 87       	std	Y+12, r25	; 0x0c
     478:	8b 87       	std	Y+11, r24	; 0x0b
     47a:	46 c0       	rjmp	.+140    	; 0x508 <flash+0x152>
	else if (__tmp > 65535)
     47c:	11 e0       	ldi	r17, 0x01	; 1
     47e:	6f 81       	ldd	r22, Y+7	; 0x07
     480:	78 85       	ldd	r23, Y+8	; 0x08
     482:	89 85       	ldd	r24, Y+9	; 0x09
     484:	9a 85       	ldd	r25, Y+10	; 0x0a
     486:	20 e0       	ldi	r18, 0x00	; 0
     488:	3f ef       	ldi	r19, 0xFF	; 255
     48a:	4f e7       	ldi	r20, 0x7F	; 127
     48c:	57 e4       	ldi	r21, 0x47	; 71
     48e:	0e 94 d7 06 	call	0xdae	; 0xdae <__gtsf2>
     492:	18 16       	cp	r1, r24
     494:	0c f0       	brlt	.+2      	; 0x498 <flash+0xe2>
     496:	10 e0       	ldi	r17, 0x00	; 0
     498:	11 23       	and	r17, r17
     49a:	61 f1       	breq	.+88     	; 0x4f4 <flash+0x13e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     49c:	6b 81       	ldd	r22, Y+3	; 0x03
     49e:	7c 81       	ldd	r23, Y+4	; 0x04
     4a0:	8d 81       	ldd	r24, Y+5	; 0x05
     4a2:	9e 81       	ldd	r25, Y+6	; 0x06
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	30 e0       	ldi	r19, 0x00	; 0
     4a8:	40 e2       	ldi	r20, 0x20	; 32
     4aa:	51 e4       	ldi	r21, 0x41	; 65
     4ac:	0e 94 dd 05 	call	0xbba	; 0xbba <__mulsf3>
     4b0:	dc 01       	movw	r26, r24
     4b2:	cb 01       	movw	r24, r22
     4b4:	bc 01       	movw	r22, r24
     4b6:	cd 01       	movw	r24, r26
     4b8:	0e 94 09 04 	call	0x812	; 0x812 <__fixunssfsi>
     4bc:	dc 01       	movw	r26, r24
     4be:	cb 01       	movw	r24, r22
     4c0:	9c 87       	std	Y+12, r25	; 0x0c
     4c2:	8b 87       	std	Y+11, r24	; 0x0b
     4c4:	12 c0       	rjmp	.+36     	; 0x4ea <flash+0x134>
     4c6:	80 e9       	ldi	r24, 0x90	; 144
     4c8:	91 e0       	ldi	r25, 0x01	; 1
     4ca:	9e 87       	std	Y+14, r25	; 0x0e
     4cc:	8d 87       	std	Y+13, r24	; 0x0d
     4ce:	8d 85       	ldd	r24, Y+13	; 0x0d
     4d0:	9e 85       	ldd	r25, Y+14	; 0x0e
     4d2:	8c 01       	movw	r16, r24
     4d4:	c8 01       	movw	r24, r16
     4d6:	01 97       	sbiw	r24, 0x01	; 1
     4d8:	f1 f7       	brne	.-4      	; 0x4d6 <flash+0x120>
     4da:	8c 01       	movw	r16, r24
     4dc:	1e 87       	std	Y+14, r17	; 0x0e
     4de:	0d 87       	std	Y+13, r16	; 0x0d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4e0:	8b 85       	ldd	r24, Y+11	; 0x0b
     4e2:	9c 85       	ldd	r25, Y+12	; 0x0c
     4e4:	01 97       	sbiw	r24, 0x01	; 1
     4e6:	9c 87       	std	Y+12, r25	; 0x0c
     4e8:	8b 87       	std	Y+11, r24	; 0x0b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4ea:	8b 85       	ldd	r24, Y+11	; 0x0b
     4ec:	9c 85       	ldd	r25, Y+12	; 0x0c
     4ee:	00 97       	sbiw	r24, 0x00	; 0
     4f0:	51 f7       	brne	.-44     	; 0x4c6 <flash+0x110>
     4f2:	17 c0       	rjmp	.+46     	; 0x522 <flash+0x16c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4f4:	6f 81       	ldd	r22, Y+7	; 0x07
     4f6:	78 85       	ldd	r23, Y+8	; 0x08
     4f8:	89 85       	ldd	r24, Y+9	; 0x09
     4fa:	9a 85       	ldd	r25, Y+10	; 0x0a
     4fc:	0e 94 09 04 	call	0x812	; 0x812 <__fixunssfsi>
     500:	dc 01       	movw	r26, r24
     502:	cb 01       	movw	r24, r22
     504:	9c 87       	std	Y+12, r25	; 0x0c
     506:	8b 87       	std	Y+11, r24	; 0x0b
     508:	8b 85       	ldd	r24, Y+11	; 0x0b
     50a:	9c 85       	ldd	r25, Y+12	; 0x0c
     50c:	98 8b       	std	Y+16, r25	; 0x10
     50e:	8f 87       	std	Y+15, r24	; 0x0f
     510:	8f 85       	ldd	r24, Y+15	; 0x0f
     512:	98 89       	ldd	r25, Y+16	; 0x10
     514:	8c 01       	movw	r16, r24
     516:	f8 01       	movw	r30, r16
     518:	31 97       	sbiw	r30, 0x01	; 1
     51a:	f1 f7       	brne	.-4      	; 0x518 <flash+0x162>
     51c:	8f 01       	movw	r16, r30
     51e:	18 8b       	std	Y+16, r17	; 0x10
     520:	0f 87       	std	Y+15, r16	; 0x0f
	_delay_ms(500);
	
	i = 0;
     522:	1a 82       	std	Y+2, r1	; 0x02
     524:	19 82       	std	Y+1, r1	; 0x01
	PORTD &=0b11101111;
     526:	8b e2       	ldi	r24, 0x2B	; 43
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	2b e2       	ldi	r18, 0x2B	; 43
     52c:	30 e0       	ldi	r19, 0x00	; 0
     52e:	f9 01       	movw	r30, r18
     530:	20 81       	ld	r18, Z
     532:	2f 7e       	andi	r18, 0xEF	; 239
     534:	fc 01       	movw	r30, r24
     536:	20 83       	st	Z, r18
	while (i<8) {
     538:	10 c0       	rjmp	.+32     	; 0x55a <flash+0x1a4>
		i++;
     53a:	89 81       	ldd	r24, Y+1	; 0x01
     53c:	9a 81       	ldd	r25, Y+2	; 0x02
     53e:	01 96       	adiw	r24, 0x01	; 1
     540:	9a 83       	std	Y+2, r25	; 0x02
     542:	89 83       	std	Y+1, r24	; 0x01
		PORTD |= 0b00000100;
     544:	8b e2       	ldi	r24, 0x2B	; 43
     546:	90 e0       	ldi	r25, 0x00	; 0
     548:	2b e2       	ldi	r18, 0x2B	; 43
     54a:	30 e0       	ldi	r19, 0x00	; 0
     54c:	f9 01       	movw	r30, r18
     54e:	20 81       	ld	r18, Z
     550:	24 60       	ori	r18, 0x04	; 4
     552:	fc 01       	movw	r30, r24
     554:	20 83       	st	Z, r18
		pulse();
     556:	0e 94 4b 00 	call	0x96	; 0x96 <pulse>
	PORTD |=0b00010000;
	_delay_ms(500);
	
	i = 0;
	PORTD &=0b11101111;
	while (i<8) {
     55a:	89 81       	ldd	r24, Y+1	; 0x01
     55c:	9a 81       	ldd	r25, Y+2	; 0x02
     55e:	88 30       	cpi	r24, 0x08	; 8
     560:	91 05       	cpc	r25, r1
     562:	5c f3       	brlt	.-42     	; 0x53a <flash+0x184>
		i++;
		PORTD |= 0b00000100;
		pulse();
	}
	PORTD |=0b00010000;
     564:	8b e2       	ldi	r24, 0x2B	; 43
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	2b e2       	ldi	r18, 0x2B	; 43
     56a:	30 e0       	ldi	r19, 0x00	; 0
     56c:	f9 01       	movw	r30, r18
     56e:	20 81       	ld	r18, Z
     570:	20 61       	ori	r18, 0x10	; 16
     572:	fc 01       	movw	r30, r24
     574:	20 83       	st	Z, r18
     576:	80 e0       	ldi	r24, 0x00	; 0
     578:	90 e0       	ldi	r25, 0x00	; 0
     57a:	aa ef       	ldi	r26, 0xFA	; 250
     57c:	b3 e4       	ldi	r27, 0x43	; 67
     57e:	89 8b       	std	Y+17, r24	; 0x11
     580:	9a 8b       	std	Y+18, r25	; 0x12
     582:	ab 8b       	std	Y+19, r26	; 0x13
     584:	bc 8b       	std	Y+20, r27	; 0x14
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     586:	69 89       	ldd	r22, Y+17	; 0x11
     588:	7a 89       	ldd	r23, Y+18	; 0x12
     58a:	8b 89       	ldd	r24, Y+19	; 0x13
     58c:	9c 89       	ldd	r25, Y+20	; 0x14
     58e:	20 e0       	ldi	r18, 0x00	; 0
     590:	30 e0       	ldi	r19, 0x00	; 0
     592:	4a e7       	ldi	r20, 0x7A	; 122
     594:	55 e4       	ldi	r21, 0x45	; 69
     596:	0e 94 dd 05 	call	0xbba	; 0xbba <__mulsf3>
     59a:	dc 01       	movw	r26, r24
     59c:	cb 01       	movw	r24, r22
     59e:	8d 8b       	std	Y+21, r24	; 0x15
     5a0:	9e 8b       	std	Y+22, r25	; 0x16
     5a2:	af 8b       	std	Y+23, r26	; 0x17
     5a4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     5a6:	11 e0       	ldi	r17, 0x01	; 1
     5a8:	6d 89       	ldd	r22, Y+21	; 0x15
     5aa:	7e 89       	ldd	r23, Y+22	; 0x16
     5ac:	8f 89       	ldd	r24, Y+23	; 0x17
     5ae:	98 8d       	ldd	r25, Y+24	; 0x18
     5b0:	20 e0       	ldi	r18, 0x00	; 0
     5b2:	30 e0       	ldi	r19, 0x00	; 0
     5b4:	40 e8       	ldi	r20, 0x80	; 128
     5b6:	5f e3       	ldi	r21, 0x3F	; 63
     5b8:	0e 94 37 07 	call	0xe6e	; 0xe6e <__ltsf2>
     5bc:	88 23       	and	r24, r24
     5be:	0c f0       	brlt	.+2      	; 0x5c2 <flash+0x20c>
     5c0:	10 e0       	ldi	r17, 0x00	; 0
     5c2:	11 23       	and	r17, r17
     5c4:	29 f0       	breq	.+10     	; 0x5d0 <flash+0x21a>
		__ticks = 1;
     5c6:	81 e0       	ldi	r24, 0x01	; 1
     5c8:	90 e0       	ldi	r25, 0x00	; 0
     5ca:	9a 8f       	std	Y+26, r25	; 0x1a
     5cc:	89 8f       	std	Y+25, r24	; 0x19
     5ce:	46 c0       	rjmp	.+140    	; 0x65c <flash+0x2a6>
	else if (__tmp > 65535)
     5d0:	11 e0       	ldi	r17, 0x01	; 1
     5d2:	6d 89       	ldd	r22, Y+21	; 0x15
     5d4:	7e 89       	ldd	r23, Y+22	; 0x16
     5d6:	8f 89       	ldd	r24, Y+23	; 0x17
     5d8:	98 8d       	ldd	r25, Y+24	; 0x18
     5da:	20 e0       	ldi	r18, 0x00	; 0
     5dc:	3f ef       	ldi	r19, 0xFF	; 255
     5de:	4f e7       	ldi	r20, 0x7F	; 127
     5e0:	57 e4       	ldi	r21, 0x47	; 71
     5e2:	0e 94 d7 06 	call	0xdae	; 0xdae <__gtsf2>
     5e6:	18 16       	cp	r1, r24
     5e8:	0c f0       	brlt	.+2      	; 0x5ec <flash+0x236>
     5ea:	10 e0       	ldi	r17, 0x00	; 0
     5ec:	11 23       	and	r17, r17
     5ee:	61 f1       	breq	.+88     	; 0x648 <flash+0x292>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5f0:	69 89       	ldd	r22, Y+17	; 0x11
     5f2:	7a 89       	ldd	r23, Y+18	; 0x12
     5f4:	8b 89       	ldd	r24, Y+19	; 0x13
     5f6:	9c 89       	ldd	r25, Y+20	; 0x14
     5f8:	20 e0       	ldi	r18, 0x00	; 0
     5fa:	30 e0       	ldi	r19, 0x00	; 0
     5fc:	40 e2       	ldi	r20, 0x20	; 32
     5fe:	51 e4       	ldi	r21, 0x41	; 65
     600:	0e 94 dd 05 	call	0xbba	; 0xbba <__mulsf3>
     604:	dc 01       	movw	r26, r24
     606:	cb 01       	movw	r24, r22
     608:	bc 01       	movw	r22, r24
     60a:	cd 01       	movw	r24, r26
     60c:	0e 94 09 04 	call	0x812	; 0x812 <__fixunssfsi>
     610:	dc 01       	movw	r26, r24
     612:	cb 01       	movw	r24, r22
     614:	9a 8f       	std	Y+26, r25	; 0x1a
     616:	89 8f       	std	Y+25, r24	; 0x19
     618:	12 c0       	rjmp	.+36     	; 0x63e <flash+0x288>
     61a:	80 e9       	ldi	r24, 0x90	; 144
     61c:	91 e0       	ldi	r25, 0x01	; 1
     61e:	9c 8f       	std	Y+28, r25	; 0x1c
     620:	8b 8f       	std	Y+27, r24	; 0x1b
     622:	8b 8d       	ldd	r24, Y+27	; 0x1b
     624:	9c 8d       	ldd	r25, Y+28	; 0x1c
     626:	8c 01       	movw	r16, r24
     628:	c8 01       	movw	r24, r16
     62a:	01 97       	sbiw	r24, 0x01	; 1
     62c:	f1 f7       	brne	.-4      	; 0x62a <flash+0x274>
     62e:	8c 01       	movw	r16, r24
     630:	1c 8f       	std	Y+28, r17	; 0x1c
     632:	0b 8f       	std	Y+27, r16	; 0x1b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     634:	89 8d       	ldd	r24, Y+25	; 0x19
     636:	9a 8d       	ldd	r25, Y+26	; 0x1a
     638:	01 97       	sbiw	r24, 0x01	; 1
     63a:	9a 8f       	std	Y+26, r25	; 0x1a
     63c:	89 8f       	std	Y+25, r24	; 0x19
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     63e:	89 8d       	ldd	r24, Y+25	; 0x19
     640:	9a 8d       	ldd	r25, Y+26	; 0x1a
     642:	00 97       	sbiw	r24, 0x00	; 0
     644:	51 f7       	brne	.-44     	; 0x61a <flash+0x264>
     646:	17 c0       	rjmp	.+46     	; 0x676 <flash+0x2c0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     648:	6d 89       	ldd	r22, Y+21	; 0x15
     64a:	7e 89       	ldd	r23, Y+22	; 0x16
     64c:	8f 89       	ldd	r24, Y+23	; 0x17
     64e:	98 8d       	ldd	r25, Y+24	; 0x18
     650:	0e 94 09 04 	call	0x812	; 0x812 <__fixunssfsi>
     654:	dc 01       	movw	r26, r24
     656:	cb 01       	movw	r24, r22
     658:	9a 8f       	std	Y+26, r25	; 0x1a
     65a:	89 8f       	std	Y+25, r24	; 0x19
     65c:	89 8d       	ldd	r24, Y+25	; 0x19
     65e:	9a 8d       	ldd	r25, Y+26	; 0x1a
     660:	9e 8f       	std	Y+30, r25	; 0x1e
     662:	8d 8f       	std	Y+29, r24	; 0x1d
     664:	8d 8d       	ldd	r24, Y+29	; 0x1d
     666:	9e 8d       	ldd	r25, Y+30	; 0x1e
     668:	8c 01       	movw	r16, r24
     66a:	f8 01       	movw	r30, r16
     66c:	31 97       	sbiw	r30, 0x01	; 1
     66e:	f1 f7       	brne	.-4      	; 0x66c <flash+0x2b6>
     670:	8f 01       	movw	r16, r30
     672:	1e 8f       	std	Y+30, r17	; 0x1e
     674:	0d 8f       	std	Y+29, r16	; 0x1d
	_delay_ms(500);
}
     676:	6e 96       	adiw	r28, 0x1e	; 30
     678:	0f b6       	in	r0, 0x3f	; 63
     67a:	f8 94       	cli
     67c:	de bf       	out	0x3e, r29	; 62
     67e:	0f be       	out	0x3f, r0	; 63
     680:	cd bf       	out	0x3d, r28	; 61
     682:	cf 91       	pop	r28
     684:	df 91       	pop	r29
     686:	1f 91       	pop	r17
     688:	0f 91       	pop	r16
     68a:	08 95       	ret

0000068c <main>:
int main(void)
{
     68c:	0f 93       	push	r16
     68e:	1f 93       	push	r17
     690:	df 93       	push	r29
     692:	cf 93       	push	r28
     694:	cd b7       	in	r28, 0x3d	; 61
     696:	de b7       	in	r29, 0x3e	; 62
     698:	60 97       	sbiw	r28, 0x10	; 16
     69a:	0f b6       	in	r0, 0x3f	; 63
     69c:	f8 94       	cli
     69e:	de bf       	out	0x3e, r29	; 62
     6a0:	0f be       	out	0x3f, r0	; 63
     6a2:	cd bf       	out	0x3d, r28	; 61
	PORTD=0b00000000;
     6a4:	8b e2       	ldi	r24, 0x2B	; 43
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	fc 01       	movw	r30, r24
     6aa:	10 82       	st	Z, r1
	DDRD|=0b00011100;
     6ac:	8a e2       	ldi	r24, 0x2A	; 42
     6ae:	90 e0       	ldi	r25, 0x00	; 0
     6b0:	2a e2       	ldi	r18, 0x2A	; 42
     6b2:	30 e0       	ldi	r19, 0x00	; 0
     6b4:	f9 01       	movw	r30, r18
     6b6:	20 81       	ld	r18, Z
     6b8:	2c 61       	ori	r18, 0x1C	; 28
     6ba:	fc 01       	movw	r30, r24
     6bc:	20 83       	st	Z, r18
	DDRB &=0b11011111;
     6be:	84 e2       	ldi	r24, 0x24	; 36
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	24 e2       	ldi	r18, 0x24	; 36
     6c4:	30 e0       	ldi	r19, 0x00	; 0
     6c6:	f9 01       	movw	r30, r18
     6c8:	20 81       	ld	r18, Z
     6ca:	2f 7d       	andi	r18, 0xDF	; 223
     6cc:	fc 01       	movw	r30, r24
     6ce:	20 83       	st	Z, r18
	int i = 0;
     6d0:	1a 82       	std	Y+2, r1	; 0x02
     6d2:	19 82       	std	Y+1, r1	; 0x01
	while (1) {
		if(PINB & 0b00100000)
     6d4:	83 e2       	ldi	r24, 0x23	; 35
     6d6:	90 e0       	ldi	r25, 0x00	; 0
     6d8:	fc 01       	movw	r30, r24
     6da:	80 81       	ld	r24, Z
     6dc:	88 2f       	mov	r24, r24
     6de:	90 e0       	ldi	r25, 0x00	; 0
     6e0:	80 72       	andi	r24, 0x20	; 32
     6e2:	90 70       	andi	r25, 0x00	; 0
     6e4:	00 97       	sbiw	r24, 0x00	; 0
     6e6:	19 f0       	breq	.+6      	; 0x6ee <main+0x62>
			flash();
     6e8:	0e 94 db 01 	call	0x3b6	; 0x3b6 <flash>
		else {
			writeLED(i);
			_delay_ms(250); 
			i = ++i % 256;
		}
	}
     6ec:	f3 cf       	rjmp	.-26     	; 0x6d4 <main+0x48>
	int i = 0;
	while (1) {
		if(PINB & 0b00100000)
			flash();
		else {
			writeLED(i);
     6ee:	89 81       	ldd	r24, Y+1	; 0x01
     6f0:	0e 94 74 01 	call	0x2e8	; 0x2e8 <writeLED>
     6f4:	80 e0       	ldi	r24, 0x00	; 0
     6f6:	90 e0       	ldi	r25, 0x00	; 0
     6f8:	aa e7       	ldi	r26, 0x7A	; 122
     6fa:	b3 e4       	ldi	r27, 0x43	; 67
     6fc:	8b 83       	std	Y+3, r24	; 0x03
     6fe:	9c 83       	std	Y+4, r25	; 0x04
     700:	ad 83       	std	Y+5, r26	; 0x05
     702:	be 83       	std	Y+6, r27	; 0x06
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     704:	6b 81       	ldd	r22, Y+3	; 0x03
     706:	7c 81       	ldd	r23, Y+4	; 0x04
     708:	8d 81       	ldd	r24, Y+5	; 0x05
     70a:	9e 81       	ldd	r25, Y+6	; 0x06
     70c:	20 e0       	ldi	r18, 0x00	; 0
     70e:	30 e0       	ldi	r19, 0x00	; 0
     710:	4a e7       	ldi	r20, 0x7A	; 122
     712:	55 e4       	ldi	r21, 0x45	; 69
     714:	0e 94 dd 05 	call	0xbba	; 0xbba <__mulsf3>
     718:	dc 01       	movw	r26, r24
     71a:	cb 01       	movw	r24, r22
     71c:	8f 83       	std	Y+7, r24	; 0x07
     71e:	98 87       	std	Y+8, r25	; 0x08
     720:	a9 87       	std	Y+9, r26	; 0x09
     722:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     724:	11 e0       	ldi	r17, 0x01	; 1
     726:	6f 81       	ldd	r22, Y+7	; 0x07
     728:	78 85       	ldd	r23, Y+8	; 0x08
     72a:	89 85       	ldd	r24, Y+9	; 0x09
     72c:	9a 85       	ldd	r25, Y+10	; 0x0a
     72e:	20 e0       	ldi	r18, 0x00	; 0
     730:	30 e0       	ldi	r19, 0x00	; 0
     732:	40 e8       	ldi	r20, 0x80	; 128
     734:	5f e3       	ldi	r21, 0x3F	; 63
     736:	0e 94 37 07 	call	0xe6e	; 0xe6e <__ltsf2>
     73a:	88 23       	and	r24, r24
     73c:	0c f0       	brlt	.+2      	; 0x740 <main+0xb4>
     73e:	10 e0       	ldi	r17, 0x00	; 0
     740:	11 23       	and	r17, r17
     742:	29 f0       	breq	.+10     	; 0x74e <main+0xc2>
		__ticks = 1;
     744:	81 e0       	ldi	r24, 0x01	; 1
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	9c 87       	std	Y+12, r25	; 0x0c
     74a:	8b 87       	std	Y+11, r24	; 0x0b
     74c:	46 c0       	rjmp	.+140    	; 0x7da <main+0x14e>
	else if (__tmp > 65535)
     74e:	11 e0       	ldi	r17, 0x01	; 1
     750:	6f 81       	ldd	r22, Y+7	; 0x07
     752:	78 85       	ldd	r23, Y+8	; 0x08
     754:	89 85       	ldd	r24, Y+9	; 0x09
     756:	9a 85       	ldd	r25, Y+10	; 0x0a
     758:	20 e0       	ldi	r18, 0x00	; 0
     75a:	3f ef       	ldi	r19, 0xFF	; 255
     75c:	4f e7       	ldi	r20, 0x7F	; 127
     75e:	57 e4       	ldi	r21, 0x47	; 71
     760:	0e 94 d7 06 	call	0xdae	; 0xdae <__gtsf2>
     764:	18 16       	cp	r1, r24
     766:	0c f0       	brlt	.+2      	; 0x76a <main+0xde>
     768:	10 e0       	ldi	r17, 0x00	; 0
     76a:	11 23       	and	r17, r17
     76c:	61 f1       	breq	.+88     	; 0x7c6 <main+0x13a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     76e:	6b 81       	ldd	r22, Y+3	; 0x03
     770:	7c 81       	ldd	r23, Y+4	; 0x04
     772:	8d 81       	ldd	r24, Y+5	; 0x05
     774:	9e 81       	ldd	r25, Y+6	; 0x06
     776:	20 e0       	ldi	r18, 0x00	; 0
     778:	30 e0       	ldi	r19, 0x00	; 0
     77a:	40 e2       	ldi	r20, 0x20	; 32
     77c:	51 e4       	ldi	r21, 0x41	; 65
     77e:	0e 94 dd 05 	call	0xbba	; 0xbba <__mulsf3>
     782:	dc 01       	movw	r26, r24
     784:	cb 01       	movw	r24, r22
     786:	bc 01       	movw	r22, r24
     788:	cd 01       	movw	r24, r26
     78a:	0e 94 09 04 	call	0x812	; 0x812 <__fixunssfsi>
     78e:	dc 01       	movw	r26, r24
     790:	cb 01       	movw	r24, r22
     792:	9c 87       	std	Y+12, r25	; 0x0c
     794:	8b 87       	std	Y+11, r24	; 0x0b
     796:	12 c0       	rjmp	.+36     	; 0x7bc <main+0x130>
     798:	80 e9       	ldi	r24, 0x90	; 144
     79a:	91 e0       	ldi	r25, 0x01	; 1
     79c:	9e 87       	std	Y+14, r25	; 0x0e
     79e:	8d 87       	std	Y+13, r24	; 0x0d
     7a0:	8d 85       	ldd	r24, Y+13	; 0x0d
     7a2:	9e 85       	ldd	r25, Y+14	; 0x0e
     7a4:	8c 01       	movw	r16, r24
     7a6:	c8 01       	movw	r24, r16
     7a8:	01 97       	sbiw	r24, 0x01	; 1
     7aa:	f1 f7       	brne	.-4      	; 0x7a8 <main+0x11c>
     7ac:	8c 01       	movw	r16, r24
     7ae:	1e 87       	std	Y+14, r17	; 0x0e
     7b0:	0d 87       	std	Y+13, r16	; 0x0d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     7b2:	8b 85       	ldd	r24, Y+11	; 0x0b
     7b4:	9c 85       	ldd	r25, Y+12	; 0x0c
     7b6:	01 97       	sbiw	r24, 0x01	; 1
     7b8:	9c 87       	std	Y+12, r25	; 0x0c
     7ba:	8b 87       	std	Y+11, r24	; 0x0b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     7bc:	8b 85       	ldd	r24, Y+11	; 0x0b
     7be:	9c 85       	ldd	r25, Y+12	; 0x0c
     7c0:	00 97       	sbiw	r24, 0x00	; 0
     7c2:	51 f7       	brne	.-44     	; 0x798 <main+0x10c>
     7c4:	17 c0       	rjmp	.+46     	; 0x7f4 <main+0x168>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     7c6:	6f 81       	ldd	r22, Y+7	; 0x07
     7c8:	78 85       	ldd	r23, Y+8	; 0x08
     7ca:	89 85       	ldd	r24, Y+9	; 0x09
     7cc:	9a 85       	ldd	r25, Y+10	; 0x0a
     7ce:	0e 94 09 04 	call	0x812	; 0x812 <__fixunssfsi>
     7d2:	dc 01       	movw	r26, r24
     7d4:	cb 01       	movw	r24, r22
     7d6:	9c 87       	std	Y+12, r25	; 0x0c
     7d8:	8b 87       	std	Y+11, r24	; 0x0b
     7da:	8b 85       	ldd	r24, Y+11	; 0x0b
     7dc:	9c 85       	ldd	r25, Y+12	; 0x0c
     7de:	98 8b       	std	Y+16, r25	; 0x10
     7e0:	8f 87       	std	Y+15, r24	; 0x0f
     7e2:	8f 85       	ldd	r24, Y+15	; 0x0f
     7e4:	98 89       	ldd	r25, Y+16	; 0x10
     7e6:	8c 01       	movw	r16, r24
     7e8:	f8 01       	movw	r30, r16
     7ea:	31 97       	sbiw	r30, 0x01	; 1
     7ec:	f1 f7       	brne	.-4      	; 0x7ea <main+0x15e>
     7ee:	8f 01       	movw	r16, r30
     7f0:	18 8b       	std	Y+16, r17	; 0x10
     7f2:	0f 87       	std	Y+15, r16	; 0x0f
			_delay_ms(250); 
			i = ++i % 256;
     7f4:	89 81       	ldd	r24, Y+1	; 0x01
     7f6:	9a 81       	ldd	r25, Y+2	; 0x02
     7f8:	01 96       	adiw	r24, 0x01	; 1
     7fa:	9a 83       	std	Y+2, r25	; 0x02
     7fc:	89 83       	std	Y+1, r24	; 0x01
     7fe:	89 81       	ldd	r24, Y+1	; 0x01
     800:	9a 81       	ldd	r25, Y+2	; 0x02
     802:	20 e0       	ldi	r18, 0x00	; 0
     804:	31 e0       	ldi	r19, 0x01	; 1
     806:	b9 01       	movw	r22, r18
     808:	0e 94 49 09 	call	0x1292	; 0x1292 <__divmodhi4>
     80c:	9a 83       	std	Y+2, r25	; 0x02
     80e:	89 83       	std	Y+1, r24	; 0x01
		}
	}
     810:	61 cf       	rjmp	.-318    	; 0x6d4 <main+0x48>

00000812 <__fixunssfsi>:
     812:	ef 92       	push	r14
     814:	ff 92       	push	r15
     816:	0f 93       	push	r16
     818:	1f 93       	push	r17
     81a:	7b 01       	movw	r14, r22
     81c:	8c 01       	movw	r16, r24
     81e:	20 e0       	ldi	r18, 0x00	; 0
     820:	30 e0       	ldi	r19, 0x00	; 0
     822:	40 e0       	ldi	r20, 0x00	; 0
     824:	5f e4       	ldi	r21, 0x4F	; 79
     826:	0e 94 07 07 	call	0xe0e	; 0xe0e <__gesf2>
     82a:	87 fd       	sbrc	r24, 7
     82c:	11 c0       	rjmp	.+34     	; 0x850 <__fixunssfsi+0x3e>
     82e:	c8 01       	movw	r24, r16
     830:	b7 01       	movw	r22, r14
     832:	20 e0       	ldi	r18, 0x00	; 0
     834:	30 e0       	ldi	r19, 0x00	; 0
     836:	40 e0       	ldi	r20, 0x00	; 0
     838:	5f e4       	ldi	r21, 0x4F	; 79
     83a:	0e 94 ac 05 	call	0xb58	; 0xb58 <__subsf3>
     83e:	0e 94 67 07 	call	0xece	; 0xece <__fixsfsi>
     842:	9b 01       	movw	r18, r22
     844:	ac 01       	movw	r20, r24
     846:	20 50       	subi	r18, 0x00	; 0
     848:	30 40       	sbci	r19, 0x00	; 0
     84a:	40 40       	sbci	r20, 0x00	; 0
     84c:	50 48       	sbci	r21, 0x80	; 128
     84e:	06 c0       	rjmp	.+12     	; 0x85c <__fixunssfsi+0x4a>
     850:	c8 01       	movw	r24, r16
     852:	b7 01       	movw	r22, r14
     854:	0e 94 67 07 	call	0xece	; 0xece <__fixsfsi>
     858:	9b 01       	movw	r18, r22
     85a:	ac 01       	movw	r20, r24
     85c:	b9 01       	movw	r22, r18
     85e:	ca 01       	movw	r24, r20
     860:	1f 91       	pop	r17
     862:	0f 91       	pop	r16
     864:	ff 90       	pop	r15
     866:	ef 90       	pop	r14
     868:	08 95       	ret

0000086a <_fpadd_parts>:
     86a:	a0 e0       	ldi	r26, 0x00	; 0
     86c:	b0 e0       	ldi	r27, 0x00	; 0
     86e:	eb e3       	ldi	r30, 0x3B	; 59
     870:	f4 e0       	ldi	r31, 0x04	; 4
     872:	0c 94 74 09 	jmp	0x12e8	; 0x12e8 <__prologue_saves__+0x8>
     876:	fc 01       	movw	r30, r24
     878:	ea 01       	movw	r28, r20
     87a:	80 81       	ld	r24, Z
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	08 f4       	brcc	.+2      	; 0x882 <_fpadd_parts+0x18>
     880:	38 c1       	rjmp	.+624    	; 0xaf2 <__stack+0x1f3>
     882:	db 01       	movw	r26, r22
     884:	9c 91       	ld	r25, X
     886:	92 30       	cpi	r25, 0x02	; 2
     888:	08 f4       	brcc	.+2      	; 0x88c <_fpadd_parts+0x22>
     88a:	30 c1       	rjmp	.+608    	; 0xaec <__stack+0x1ed>
     88c:	84 30       	cpi	r24, 0x04	; 4
     88e:	59 f4       	brne	.+22     	; 0x8a6 <_fpadd_parts+0x3c>
     890:	94 30       	cpi	r25, 0x04	; 4
     892:	09 f0       	breq	.+2      	; 0x896 <_fpadd_parts+0x2c>
     894:	2e c1       	rjmp	.+604    	; 0xaf2 <__stack+0x1f3>
     896:	91 81       	ldd	r25, Z+1	; 0x01
     898:	11 96       	adiw	r26, 0x01	; 1
     89a:	8c 91       	ld	r24, X
     89c:	11 97       	sbiw	r26, 0x01	; 1
     89e:	98 17       	cp	r25, r24
     8a0:	09 f0       	breq	.+2      	; 0x8a4 <_fpadd_parts+0x3a>
     8a2:	21 c1       	rjmp	.+578    	; 0xae6 <__stack+0x1e7>
     8a4:	26 c1       	rjmp	.+588    	; 0xaf2 <__stack+0x1f3>
     8a6:	94 30       	cpi	r25, 0x04	; 4
     8a8:	09 f4       	brne	.+2      	; 0x8ac <_fpadd_parts+0x42>
     8aa:	20 c1       	rjmp	.+576    	; 0xaec <__stack+0x1ed>
     8ac:	92 30       	cpi	r25, 0x02	; 2
     8ae:	b1 f4       	brne	.+44     	; 0x8dc <_fpadd_parts+0x72>
     8b0:	82 30       	cpi	r24, 0x02	; 2
     8b2:	09 f0       	breq	.+2      	; 0x8b6 <_fpadd_parts+0x4c>
     8b4:	1e c1       	rjmp	.+572    	; 0xaf2 <__stack+0x1f3>
     8b6:	ca 01       	movw	r24, r20
     8b8:	af 01       	movw	r20, r30
     8ba:	28 e0       	ldi	r18, 0x08	; 8
     8bc:	da 01       	movw	r26, r20
     8be:	0d 90       	ld	r0, X+
     8c0:	ad 01       	movw	r20, r26
     8c2:	dc 01       	movw	r26, r24
     8c4:	0d 92       	st	X+, r0
     8c6:	cd 01       	movw	r24, r26
     8c8:	21 50       	subi	r18, 0x01	; 1
     8ca:	c1 f7       	brne	.-16     	; 0x8bc <_fpadd_parts+0x52>
     8cc:	db 01       	movw	r26, r22
     8ce:	11 96       	adiw	r26, 0x01	; 1
     8d0:	8c 91       	ld	r24, X
     8d2:	11 97       	sbiw	r26, 0x01	; 1
     8d4:	91 81       	ldd	r25, Z+1	; 0x01
     8d6:	89 23       	and	r24, r25
     8d8:	89 83       	std	Y+1, r24	; 0x01
     8da:	0a c1       	rjmp	.+532    	; 0xaf0 <__stack+0x1f1>
     8dc:	82 30       	cpi	r24, 0x02	; 2
     8de:	09 f4       	brne	.+2      	; 0x8e2 <_fpadd_parts+0x78>
     8e0:	05 c1       	rjmp	.+522    	; 0xaec <__stack+0x1ed>
     8e2:	c2 80       	ldd	r12, Z+2	; 0x02
     8e4:	d3 80       	ldd	r13, Z+3	; 0x03
     8e6:	db 01       	movw	r26, r22
     8e8:	12 96       	adiw	r26, 0x02	; 2
     8ea:	6d 90       	ld	r6, X+
     8ec:	7c 90       	ld	r7, X
     8ee:	13 97       	sbiw	r26, 0x03	; 3
     8f0:	24 81       	ldd	r18, Z+4	; 0x04
     8f2:	35 81       	ldd	r19, Z+5	; 0x05
     8f4:	46 81       	ldd	r20, Z+6	; 0x06
     8f6:	57 81       	ldd	r21, Z+7	; 0x07
     8f8:	14 96       	adiw	r26, 0x04	; 4
     8fa:	ed 90       	ld	r14, X+
     8fc:	fd 90       	ld	r15, X+
     8fe:	0d 91       	ld	r16, X+
     900:	1c 91       	ld	r17, X
     902:	17 97       	sbiw	r26, 0x07	; 7
     904:	c6 01       	movw	r24, r12
     906:	86 19       	sub	r24, r6
     908:	97 09       	sbc	r25, r7
     90a:	5c 01       	movw	r10, r24
     90c:	97 ff       	sbrs	r25, 7
     90e:	04 c0       	rjmp	.+8      	; 0x918 <__stack+0x19>
     910:	aa 24       	eor	r10, r10
     912:	bb 24       	eor	r11, r11
     914:	a8 1a       	sub	r10, r24
     916:	b9 0a       	sbc	r11, r25
     918:	b0 e2       	ldi	r27, 0x20	; 32
     91a:	ab 16       	cp	r10, r27
     91c:	b1 04       	cpc	r11, r1
     91e:	0c f0       	brlt	.+2      	; 0x922 <__stack+0x23>
     920:	61 c0       	rjmp	.+194    	; 0x9e4 <__stack+0xe5>
     922:	18 16       	cp	r1, r24
     924:	19 06       	cpc	r1, r25
     926:	6c f5       	brge	.+90     	; 0x982 <__stack+0x83>
     928:	37 01       	movw	r6, r14
     92a:	48 01       	movw	r8, r16
     92c:	0a 2c       	mov	r0, r10
     92e:	04 c0       	rjmp	.+8      	; 0x938 <__stack+0x39>
     930:	96 94       	lsr	r9
     932:	87 94       	ror	r8
     934:	77 94       	ror	r7
     936:	67 94       	ror	r6
     938:	0a 94       	dec	r0
     93a:	d2 f7       	brpl	.-12     	; 0x930 <__stack+0x31>
     93c:	81 e0       	ldi	r24, 0x01	; 1
     93e:	90 e0       	ldi	r25, 0x00	; 0
     940:	a0 e0       	ldi	r26, 0x00	; 0
     942:	b0 e0       	ldi	r27, 0x00	; 0
     944:	0a 2c       	mov	r0, r10
     946:	04 c0       	rjmp	.+8      	; 0x950 <__stack+0x51>
     948:	88 0f       	add	r24, r24
     94a:	99 1f       	adc	r25, r25
     94c:	aa 1f       	adc	r26, r26
     94e:	bb 1f       	adc	r27, r27
     950:	0a 94       	dec	r0
     952:	d2 f7       	brpl	.-12     	; 0x948 <__stack+0x49>
     954:	01 97       	sbiw	r24, 0x01	; 1
     956:	a1 09       	sbc	r26, r1
     958:	b1 09       	sbc	r27, r1
     95a:	8e 21       	and	r24, r14
     95c:	9f 21       	and	r25, r15
     95e:	a0 23       	and	r26, r16
     960:	b1 23       	and	r27, r17
     962:	ee 24       	eor	r14, r14
     964:	ff 24       	eor	r15, r15
     966:	87 01       	movw	r16, r14
     968:	e3 94       	inc	r14
     96a:	00 97       	sbiw	r24, 0x00	; 0
     96c:	a1 05       	cpc	r26, r1
     96e:	b1 05       	cpc	r27, r1
     970:	19 f4       	brne	.+6      	; 0x978 <__stack+0x79>
     972:	ee 24       	eor	r14, r14
     974:	ff 24       	eor	r15, r15
     976:	87 01       	movw	r16, r14
     978:	e6 28       	or	r14, r6
     97a:	f7 28       	or	r15, r7
     97c:	08 29       	or	r16, r8
     97e:	19 29       	or	r17, r9
     980:	3c c0       	rjmp	.+120    	; 0x9fa <__stack+0xfb>
     982:	00 97       	sbiw	r24, 0x00	; 0
     984:	d1 f1       	breq	.+116    	; 0x9fa <__stack+0xfb>
     986:	ca 0c       	add	r12, r10
     988:	db 1c       	adc	r13, r11
     98a:	39 01       	movw	r6, r18
     98c:	4a 01       	movw	r8, r20
     98e:	0a 2c       	mov	r0, r10
     990:	04 c0       	rjmp	.+8      	; 0x99a <__stack+0x9b>
     992:	96 94       	lsr	r9
     994:	87 94       	ror	r8
     996:	77 94       	ror	r7
     998:	67 94       	ror	r6
     99a:	0a 94       	dec	r0
     99c:	d2 f7       	brpl	.-12     	; 0x992 <__stack+0x93>
     99e:	81 e0       	ldi	r24, 0x01	; 1
     9a0:	90 e0       	ldi	r25, 0x00	; 0
     9a2:	a0 e0       	ldi	r26, 0x00	; 0
     9a4:	b0 e0       	ldi	r27, 0x00	; 0
     9a6:	0a 2c       	mov	r0, r10
     9a8:	04 c0       	rjmp	.+8      	; 0x9b2 <__stack+0xb3>
     9aa:	88 0f       	add	r24, r24
     9ac:	99 1f       	adc	r25, r25
     9ae:	aa 1f       	adc	r26, r26
     9b0:	bb 1f       	adc	r27, r27
     9b2:	0a 94       	dec	r0
     9b4:	d2 f7       	brpl	.-12     	; 0x9aa <__stack+0xab>
     9b6:	01 97       	sbiw	r24, 0x01	; 1
     9b8:	a1 09       	sbc	r26, r1
     9ba:	b1 09       	sbc	r27, r1
     9bc:	82 23       	and	r24, r18
     9be:	93 23       	and	r25, r19
     9c0:	a4 23       	and	r26, r20
     9c2:	b5 23       	and	r27, r21
     9c4:	21 e0       	ldi	r18, 0x01	; 1
     9c6:	30 e0       	ldi	r19, 0x00	; 0
     9c8:	40 e0       	ldi	r20, 0x00	; 0
     9ca:	50 e0       	ldi	r21, 0x00	; 0
     9cc:	00 97       	sbiw	r24, 0x00	; 0
     9ce:	a1 05       	cpc	r26, r1
     9d0:	b1 05       	cpc	r27, r1
     9d2:	19 f4       	brne	.+6      	; 0x9da <__stack+0xdb>
     9d4:	20 e0       	ldi	r18, 0x00	; 0
     9d6:	30 e0       	ldi	r19, 0x00	; 0
     9d8:	a9 01       	movw	r20, r18
     9da:	26 29       	or	r18, r6
     9dc:	37 29       	or	r19, r7
     9de:	48 29       	or	r20, r8
     9e0:	59 29       	or	r21, r9
     9e2:	0b c0       	rjmp	.+22     	; 0x9fa <__stack+0xfb>
     9e4:	6c 14       	cp	r6, r12
     9e6:	7d 04       	cpc	r7, r13
     9e8:	24 f4       	brge	.+8      	; 0x9f2 <__stack+0xf3>
     9ea:	ee 24       	eor	r14, r14
     9ec:	ff 24       	eor	r15, r15
     9ee:	87 01       	movw	r16, r14
     9f0:	04 c0       	rjmp	.+8      	; 0x9fa <__stack+0xfb>
     9f2:	63 01       	movw	r12, r6
     9f4:	20 e0       	ldi	r18, 0x00	; 0
     9f6:	30 e0       	ldi	r19, 0x00	; 0
     9f8:	a9 01       	movw	r20, r18
     9fa:	81 81       	ldd	r24, Z+1	; 0x01
     9fc:	fb 01       	movw	r30, r22
     9fe:	91 81       	ldd	r25, Z+1	; 0x01
     a00:	89 17       	cp	r24, r25
     a02:	09 f4       	brne	.+2      	; 0xa06 <__stack+0x107>
     a04:	45 c0       	rjmp	.+138    	; 0xa90 <__stack+0x191>
     a06:	88 23       	and	r24, r24
     a08:	49 f0       	breq	.+18     	; 0xa1c <__stack+0x11d>
     a0a:	d8 01       	movw	r26, r16
     a0c:	c7 01       	movw	r24, r14
     a0e:	82 1b       	sub	r24, r18
     a10:	93 0b       	sbc	r25, r19
     a12:	a4 0b       	sbc	r26, r20
     a14:	b5 0b       	sbc	r27, r21
     a16:	9c 01       	movw	r18, r24
     a18:	ad 01       	movw	r20, r26
     a1a:	04 c0       	rjmp	.+8      	; 0xa24 <__stack+0x125>
     a1c:	2e 19       	sub	r18, r14
     a1e:	3f 09       	sbc	r19, r15
     a20:	40 0b       	sbc	r20, r16
     a22:	51 0b       	sbc	r21, r17
     a24:	57 fd       	sbrc	r21, 7
     a26:	04 c0       	rjmp	.+8      	; 0xa30 <__stack+0x131>
     a28:	19 82       	std	Y+1, r1	; 0x01
     a2a:	db 82       	std	Y+3, r13	; 0x03
     a2c:	ca 82       	std	Y+2, r12	; 0x02
     a2e:	0b c0       	rjmp	.+22     	; 0xa46 <__stack+0x147>
     a30:	81 e0       	ldi	r24, 0x01	; 1
     a32:	89 83       	std	Y+1, r24	; 0x01
     a34:	db 82       	std	Y+3, r13	; 0x03
     a36:	ca 82       	std	Y+2, r12	; 0x02
     a38:	50 95       	com	r21
     a3a:	40 95       	com	r20
     a3c:	30 95       	com	r19
     a3e:	21 95       	neg	r18
     a40:	3f 4f       	sbci	r19, 0xFF	; 255
     a42:	4f 4f       	sbci	r20, 0xFF	; 255
     a44:	5f 4f       	sbci	r21, 0xFF	; 255
     a46:	2c 83       	std	Y+4, r18	; 0x04
     a48:	3d 83       	std	Y+5, r19	; 0x05
     a4a:	4e 83       	std	Y+6, r20	; 0x06
     a4c:	5f 83       	std	Y+7, r21	; 0x07
     a4e:	0d c0       	rjmp	.+26     	; 0xa6a <__stack+0x16b>
     a50:	88 0f       	add	r24, r24
     a52:	99 1f       	adc	r25, r25
     a54:	aa 1f       	adc	r26, r26
     a56:	bb 1f       	adc	r27, r27
     a58:	8c 83       	std	Y+4, r24	; 0x04
     a5a:	9d 83       	std	Y+5, r25	; 0x05
     a5c:	ae 83       	std	Y+6, r26	; 0x06
     a5e:	bf 83       	std	Y+7, r27	; 0x07
     a60:	8a 81       	ldd	r24, Y+2	; 0x02
     a62:	9b 81       	ldd	r25, Y+3	; 0x03
     a64:	01 97       	sbiw	r24, 0x01	; 1
     a66:	9b 83       	std	Y+3, r25	; 0x03
     a68:	8a 83       	std	Y+2, r24	; 0x02
     a6a:	8c 81       	ldd	r24, Y+4	; 0x04
     a6c:	9d 81       	ldd	r25, Y+5	; 0x05
     a6e:	ae 81       	ldd	r26, Y+6	; 0x06
     a70:	bf 81       	ldd	r27, Y+7	; 0x07
     a72:	9c 01       	movw	r18, r24
     a74:	ad 01       	movw	r20, r26
     a76:	21 50       	subi	r18, 0x01	; 1
     a78:	30 40       	sbci	r19, 0x00	; 0
     a7a:	40 40       	sbci	r20, 0x00	; 0
     a7c:	50 40       	sbci	r21, 0x00	; 0
     a7e:	2f 3f       	cpi	r18, 0xFF	; 255
     a80:	ef ef       	ldi	r30, 0xFF	; 255
     a82:	3e 07       	cpc	r19, r30
     a84:	ef ef       	ldi	r30, 0xFF	; 255
     a86:	4e 07       	cpc	r20, r30
     a88:	ef e3       	ldi	r30, 0x3F	; 63
     a8a:	5e 07       	cpc	r21, r30
     a8c:	08 f3       	brcs	.-62     	; 0xa50 <__stack+0x151>
     a8e:	0b c0       	rjmp	.+22     	; 0xaa6 <__stack+0x1a7>
     a90:	89 83       	std	Y+1, r24	; 0x01
     a92:	db 82       	std	Y+3, r13	; 0x03
     a94:	ca 82       	std	Y+2, r12	; 0x02
     a96:	2e 0d       	add	r18, r14
     a98:	3f 1d       	adc	r19, r15
     a9a:	40 1f       	adc	r20, r16
     a9c:	51 1f       	adc	r21, r17
     a9e:	2c 83       	std	Y+4, r18	; 0x04
     aa0:	3d 83       	std	Y+5, r19	; 0x05
     aa2:	4e 83       	std	Y+6, r20	; 0x06
     aa4:	5f 83       	std	Y+7, r21	; 0x07
     aa6:	83 e0       	ldi	r24, 0x03	; 3
     aa8:	88 83       	st	Y, r24
     aaa:	2c 81       	ldd	r18, Y+4	; 0x04
     aac:	3d 81       	ldd	r19, Y+5	; 0x05
     aae:	4e 81       	ldd	r20, Y+6	; 0x06
     ab0:	5f 81       	ldd	r21, Y+7	; 0x07
     ab2:	57 ff       	sbrs	r21, 7
     ab4:	1d c0       	rjmp	.+58     	; 0xaf0 <__stack+0x1f1>
     ab6:	da 01       	movw	r26, r20
     ab8:	c9 01       	movw	r24, r18
     aba:	81 70       	andi	r24, 0x01	; 1
     abc:	90 70       	andi	r25, 0x00	; 0
     abe:	a0 70       	andi	r26, 0x00	; 0
     ac0:	b0 70       	andi	r27, 0x00	; 0
     ac2:	56 95       	lsr	r21
     ac4:	47 95       	ror	r20
     ac6:	37 95       	ror	r19
     ac8:	27 95       	ror	r18
     aca:	82 2b       	or	r24, r18
     acc:	93 2b       	or	r25, r19
     ace:	a4 2b       	or	r26, r20
     ad0:	b5 2b       	or	r27, r21
     ad2:	8c 83       	std	Y+4, r24	; 0x04
     ad4:	9d 83       	std	Y+5, r25	; 0x05
     ad6:	ae 83       	std	Y+6, r26	; 0x06
     ad8:	bf 83       	std	Y+7, r27	; 0x07
     ada:	8a 81       	ldd	r24, Y+2	; 0x02
     adc:	9b 81       	ldd	r25, Y+3	; 0x03
     ade:	01 96       	adiw	r24, 0x01	; 1
     ae0:	9b 83       	std	Y+3, r25	; 0x03
     ae2:	8a 83       	std	Y+2, r24	; 0x02
     ae4:	05 c0       	rjmp	.+10     	; 0xaf0 <__stack+0x1f1>
     ae6:	e0 e0       	ldi	r30, 0x00	; 0
     ae8:	f1 e0       	ldi	r31, 0x01	; 1
     aea:	03 c0       	rjmp	.+6      	; 0xaf2 <__stack+0x1f3>
     aec:	fb 01       	movw	r30, r22
     aee:	01 c0       	rjmp	.+2      	; 0xaf2 <__stack+0x1f3>
     af0:	fe 01       	movw	r30, r28
     af2:	cf 01       	movw	r24, r30
     af4:	cd b7       	in	r28, 0x3d	; 61
     af6:	de b7       	in	r29, 0x3e	; 62
     af8:	ee e0       	ldi	r30, 0x0E	; 14
     afa:	0c 94 90 09 	jmp	0x1320	; 0x1320 <__epilogue_restores__+0x8>

00000afe <__addsf3>:
     afe:	a0 e2       	ldi	r26, 0x20	; 32
     b00:	b0 e0       	ldi	r27, 0x00	; 0
     b02:	e5 e8       	ldi	r30, 0x85	; 133
     b04:	f5 e0       	ldi	r31, 0x05	; 5
     b06:	0c 94 7c 09 	jmp	0x12f8	; 0x12f8 <__prologue_saves__+0x18>
     b0a:	69 83       	std	Y+1, r22	; 0x01
     b0c:	7a 83       	std	Y+2, r23	; 0x02
     b0e:	8b 83       	std	Y+3, r24	; 0x03
     b10:	9c 83       	std	Y+4, r25	; 0x04
     b12:	2d 83       	std	Y+5, r18	; 0x05
     b14:	3e 83       	std	Y+6, r19	; 0x06
     b16:	4f 83       	std	Y+7, r20	; 0x07
     b18:	58 87       	std	Y+8, r21	; 0x08
     b1a:	89 e0       	ldi	r24, 0x09	; 9
     b1c:	e8 2e       	mov	r14, r24
     b1e:	f1 2c       	mov	r15, r1
     b20:	ec 0e       	add	r14, r28
     b22:	fd 1e       	adc	r15, r29
     b24:	ce 01       	movw	r24, r28
     b26:	01 96       	adiw	r24, 0x01	; 1
     b28:	b7 01       	movw	r22, r14
     b2a:	0e 94 87 08 	call	0x110e	; 0x110e <__unpack_f>
     b2e:	8e 01       	movw	r16, r28
     b30:	0f 5e       	subi	r16, 0xEF	; 239
     b32:	1f 4f       	sbci	r17, 0xFF	; 255
     b34:	ce 01       	movw	r24, r28
     b36:	05 96       	adiw	r24, 0x05	; 5
     b38:	b8 01       	movw	r22, r16
     b3a:	0e 94 87 08 	call	0x110e	; 0x110e <__unpack_f>
     b3e:	c7 01       	movw	r24, r14
     b40:	b8 01       	movw	r22, r16
     b42:	ae 01       	movw	r20, r28
     b44:	47 5e       	subi	r20, 0xE7	; 231
     b46:	5f 4f       	sbci	r21, 0xFF	; 255
     b48:	0e 94 35 04 	call	0x86a	; 0x86a <_fpadd_parts>
     b4c:	0e 94 b9 07 	call	0xf72	; 0xf72 <__pack_f>
     b50:	a0 96       	adiw	r28, 0x20	; 32
     b52:	e6 e0       	ldi	r30, 0x06	; 6
     b54:	0c 94 98 09 	jmp	0x1330	; 0x1330 <__epilogue_restores__+0x18>

00000b58 <__subsf3>:
     b58:	a0 e2       	ldi	r26, 0x20	; 32
     b5a:	b0 e0       	ldi	r27, 0x00	; 0
     b5c:	e2 eb       	ldi	r30, 0xB2	; 178
     b5e:	f5 e0       	ldi	r31, 0x05	; 5
     b60:	0c 94 7c 09 	jmp	0x12f8	; 0x12f8 <__prologue_saves__+0x18>
     b64:	69 83       	std	Y+1, r22	; 0x01
     b66:	7a 83       	std	Y+2, r23	; 0x02
     b68:	8b 83       	std	Y+3, r24	; 0x03
     b6a:	9c 83       	std	Y+4, r25	; 0x04
     b6c:	2d 83       	std	Y+5, r18	; 0x05
     b6e:	3e 83       	std	Y+6, r19	; 0x06
     b70:	4f 83       	std	Y+7, r20	; 0x07
     b72:	58 87       	std	Y+8, r21	; 0x08
     b74:	8e 01       	movw	r16, r28
     b76:	07 5f       	subi	r16, 0xF7	; 247
     b78:	1f 4f       	sbci	r17, 0xFF	; 255
     b7a:	ce 01       	movw	r24, r28
     b7c:	01 96       	adiw	r24, 0x01	; 1
     b7e:	b8 01       	movw	r22, r16
     b80:	0e 94 87 08 	call	0x110e	; 0x110e <__unpack_f>
     b84:	91 e1       	ldi	r25, 0x11	; 17
     b86:	e9 2e       	mov	r14, r25
     b88:	f1 2c       	mov	r15, r1
     b8a:	ec 0e       	add	r14, r28
     b8c:	fd 1e       	adc	r15, r29
     b8e:	ce 01       	movw	r24, r28
     b90:	05 96       	adiw	r24, 0x05	; 5
     b92:	b7 01       	movw	r22, r14
     b94:	0e 94 87 08 	call	0x110e	; 0x110e <__unpack_f>
     b98:	8a 89       	ldd	r24, Y+18	; 0x12
     b9a:	91 e0       	ldi	r25, 0x01	; 1
     b9c:	89 27       	eor	r24, r25
     b9e:	8a 8b       	std	Y+18, r24	; 0x12
     ba0:	c8 01       	movw	r24, r16
     ba2:	b7 01       	movw	r22, r14
     ba4:	ae 01       	movw	r20, r28
     ba6:	47 5e       	subi	r20, 0xE7	; 231
     ba8:	5f 4f       	sbci	r21, 0xFF	; 255
     baa:	0e 94 35 04 	call	0x86a	; 0x86a <_fpadd_parts>
     bae:	0e 94 b9 07 	call	0xf72	; 0xf72 <__pack_f>
     bb2:	a0 96       	adiw	r28, 0x20	; 32
     bb4:	e6 e0       	ldi	r30, 0x06	; 6
     bb6:	0c 94 98 09 	jmp	0x1330	; 0x1330 <__epilogue_restores__+0x18>

00000bba <__mulsf3>:
     bba:	a0 e2       	ldi	r26, 0x20	; 32
     bbc:	b0 e0       	ldi	r27, 0x00	; 0
     bbe:	e3 ee       	ldi	r30, 0xE3	; 227
     bc0:	f5 e0       	ldi	r31, 0x05	; 5
     bc2:	0c 94 70 09 	jmp	0x12e0	; 0x12e0 <__prologue_saves__>
     bc6:	69 83       	std	Y+1, r22	; 0x01
     bc8:	7a 83       	std	Y+2, r23	; 0x02
     bca:	8b 83       	std	Y+3, r24	; 0x03
     bcc:	9c 83       	std	Y+4, r25	; 0x04
     bce:	2d 83       	std	Y+5, r18	; 0x05
     bd0:	3e 83       	std	Y+6, r19	; 0x06
     bd2:	4f 83       	std	Y+7, r20	; 0x07
     bd4:	58 87       	std	Y+8, r21	; 0x08
     bd6:	ce 01       	movw	r24, r28
     bd8:	01 96       	adiw	r24, 0x01	; 1
     bda:	be 01       	movw	r22, r28
     bdc:	67 5f       	subi	r22, 0xF7	; 247
     bde:	7f 4f       	sbci	r23, 0xFF	; 255
     be0:	0e 94 87 08 	call	0x110e	; 0x110e <__unpack_f>
     be4:	ce 01       	movw	r24, r28
     be6:	05 96       	adiw	r24, 0x05	; 5
     be8:	be 01       	movw	r22, r28
     bea:	6f 5e       	subi	r22, 0xEF	; 239
     bec:	7f 4f       	sbci	r23, 0xFF	; 255
     bee:	0e 94 87 08 	call	0x110e	; 0x110e <__unpack_f>
     bf2:	99 85       	ldd	r25, Y+9	; 0x09
     bf4:	92 30       	cpi	r25, 0x02	; 2
     bf6:	78 f0       	brcs	.+30     	; 0xc16 <__mulsf3+0x5c>
     bf8:	89 89       	ldd	r24, Y+17	; 0x11
     bfa:	82 30       	cpi	r24, 0x02	; 2
     bfc:	c0 f0       	brcs	.+48     	; 0xc2e <__mulsf3+0x74>
     bfe:	94 30       	cpi	r25, 0x04	; 4
     c00:	19 f4       	brne	.+6      	; 0xc08 <__mulsf3+0x4e>
     c02:	82 30       	cpi	r24, 0x02	; 2
     c04:	41 f4       	brne	.+16     	; 0xc16 <__mulsf3+0x5c>
     c06:	cb c0       	rjmp	.+406    	; 0xd9e <__mulsf3+0x1e4>
     c08:	84 30       	cpi	r24, 0x04	; 4
     c0a:	19 f4       	brne	.+6      	; 0xc12 <__mulsf3+0x58>
     c0c:	92 30       	cpi	r25, 0x02	; 2
     c0e:	79 f4       	brne	.+30     	; 0xc2e <__mulsf3+0x74>
     c10:	c6 c0       	rjmp	.+396    	; 0xd9e <__mulsf3+0x1e4>
     c12:	92 30       	cpi	r25, 0x02	; 2
     c14:	51 f4       	brne	.+20     	; 0xc2a <__mulsf3+0x70>
     c16:	81 e0       	ldi	r24, 0x01	; 1
     c18:	2a 85       	ldd	r18, Y+10	; 0x0a
     c1a:	9a 89       	ldd	r25, Y+18	; 0x12
     c1c:	29 17       	cp	r18, r25
     c1e:	09 f4       	brne	.+2      	; 0xc22 <__mulsf3+0x68>
     c20:	80 e0       	ldi	r24, 0x00	; 0
     c22:	8a 87       	std	Y+10, r24	; 0x0a
     c24:	ce 01       	movw	r24, r28
     c26:	09 96       	adiw	r24, 0x09	; 9
     c28:	bc c0       	rjmp	.+376    	; 0xda2 <__mulsf3+0x1e8>
     c2a:	82 30       	cpi	r24, 0x02	; 2
     c2c:	51 f4       	brne	.+20     	; 0xc42 <__mulsf3+0x88>
     c2e:	81 e0       	ldi	r24, 0x01	; 1
     c30:	2a 85       	ldd	r18, Y+10	; 0x0a
     c32:	9a 89       	ldd	r25, Y+18	; 0x12
     c34:	29 17       	cp	r18, r25
     c36:	09 f4       	brne	.+2      	; 0xc3a <__mulsf3+0x80>
     c38:	80 e0       	ldi	r24, 0x00	; 0
     c3a:	8a 8b       	std	Y+18, r24	; 0x12
     c3c:	ce 01       	movw	r24, r28
     c3e:	41 96       	adiw	r24, 0x11	; 17
     c40:	b0 c0       	rjmp	.+352    	; 0xda2 <__mulsf3+0x1e8>
     c42:	6d 84       	ldd	r6, Y+13	; 0x0d
     c44:	7e 84       	ldd	r7, Y+14	; 0x0e
     c46:	8f 84       	ldd	r8, Y+15	; 0x0f
     c48:	98 88       	ldd	r9, Y+16	; 0x10
     c4a:	ed 88       	ldd	r14, Y+21	; 0x15
     c4c:	fe 88       	ldd	r15, Y+22	; 0x16
     c4e:	0f 89       	ldd	r16, Y+23	; 0x17
     c50:	18 8d       	ldd	r17, Y+24	; 0x18
     c52:	e0 e2       	ldi	r30, 0x20	; 32
     c54:	f0 e0       	ldi	r31, 0x00	; 0
     c56:	80 e0       	ldi	r24, 0x00	; 0
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	dc 01       	movw	r26, r24
     c5c:	aa 24       	eor	r10, r10
     c5e:	bb 24       	eor	r11, r11
     c60:	65 01       	movw	r12, r10
     c62:	20 e0       	ldi	r18, 0x00	; 0
     c64:	30 e0       	ldi	r19, 0x00	; 0
     c66:	a9 01       	movw	r20, r18
     c68:	b3 01       	movw	r22, r6
     c6a:	61 70       	andi	r22, 0x01	; 1
     c6c:	70 70       	andi	r23, 0x00	; 0
     c6e:	61 15       	cp	r22, r1
     c70:	71 05       	cpc	r23, r1
     c72:	d1 f0       	breq	.+52     	; 0xca8 <__mulsf3+0xee>
     c74:	2e 0d       	add	r18, r14
     c76:	3f 1d       	adc	r19, r15
     c78:	40 1f       	adc	r20, r16
     c7a:	51 1f       	adc	r21, r17
     c7c:	15 01       	movw	r2, r10
     c7e:	26 01       	movw	r4, r12
     c80:	28 0e       	add	r2, r24
     c82:	39 1e       	adc	r3, r25
     c84:	4a 1e       	adc	r4, r26
     c86:	5b 1e       	adc	r5, r27
     c88:	81 e0       	ldi	r24, 0x01	; 1
     c8a:	90 e0       	ldi	r25, 0x00	; 0
     c8c:	a0 e0       	ldi	r26, 0x00	; 0
     c8e:	b0 e0       	ldi	r27, 0x00	; 0
     c90:	2e 15       	cp	r18, r14
     c92:	3f 05       	cpc	r19, r15
     c94:	40 07       	cpc	r20, r16
     c96:	51 07       	cpc	r21, r17
     c98:	18 f0       	brcs	.+6      	; 0xca0 <__mulsf3+0xe6>
     c9a:	80 e0       	ldi	r24, 0x00	; 0
     c9c:	90 e0       	ldi	r25, 0x00	; 0
     c9e:	dc 01       	movw	r26, r24
     ca0:	82 0d       	add	r24, r2
     ca2:	93 1d       	adc	r25, r3
     ca4:	a4 1d       	adc	r26, r4
     ca6:	b5 1d       	adc	r27, r5
     ca8:	aa 0c       	add	r10, r10
     caa:	bb 1c       	adc	r11, r11
     cac:	cc 1c       	adc	r12, r12
     cae:	dd 1c       	adc	r13, r13
     cb0:	17 ff       	sbrs	r17, 7
     cb2:	09 c0       	rjmp	.+18     	; 0xcc6 <__mulsf3+0x10c>
     cb4:	61 e0       	ldi	r22, 0x01	; 1
     cb6:	26 2e       	mov	r2, r22
     cb8:	31 2c       	mov	r3, r1
     cba:	41 2c       	mov	r4, r1
     cbc:	51 2c       	mov	r5, r1
     cbe:	a2 28       	or	r10, r2
     cc0:	b3 28       	or	r11, r3
     cc2:	c4 28       	or	r12, r4
     cc4:	d5 28       	or	r13, r5
     cc6:	31 97       	sbiw	r30, 0x01	; 1
     cc8:	49 f0       	breq	.+18     	; 0xcdc <__mulsf3+0x122>
     cca:	ee 0c       	add	r14, r14
     ccc:	ff 1c       	adc	r15, r15
     cce:	00 1f       	adc	r16, r16
     cd0:	11 1f       	adc	r17, r17
     cd2:	96 94       	lsr	r9
     cd4:	87 94       	ror	r8
     cd6:	77 94       	ror	r7
     cd8:	67 94       	ror	r6
     cda:	c6 cf       	rjmp	.-116    	; 0xc68 <__mulsf3+0xae>
     cdc:	6b 89       	ldd	r22, Y+19	; 0x13
     cde:	7c 89       	ldd	r23, Y+20	; 0x14
     ce0:	eb 85       	ldd	r30, Y+11	; 0x0b
     ce2:	fc 85       	ldd	r31, Y+12	; 0x0c
     ce4:	6e 0f       	add	r22, r30
     ce6:	7f 1f       	adc	r23, r31
     ce8:	6e 5f       	subi	r22, 0xFE	; 254
     cea:	7f 4f       	sbci	r23, 0xFF	; 255
     cec:	7c 8f       	std	Y+28, r23	; 0x1c
     cee:	6b 8f       	std	Y+27, r22	; 0x1b
     cf0:	61 e0       	ldi	r22, 0x01	; 1
     cf2:	ea 85       	ldd	r30, Y+10	; 0x0a
     cf4:	7a 89       	ldd	r23, Y+18	; 0x12
     cf6:	e7 17       	cp	r30, r23
     cf8:	09 f4       	brne	.+2      	; 0xcfc <__mulsf3+0x142>
     cfa:	60 e0       	ldi	r22, 0x00	; 0
     cfc:	6a 8f       	std	Y+26, r22	; 0x1a
     cfe:	6b 8d       	ldd	r22, Y+27	; 0x1b
     d00:	7c 8d       	ldd	r23, Y+28	; 0x1c
     d02:	10 c0       	rjmp	.+32     	; 0xd24 <__mulsf3+0x16a>
     d04:	fc 01       	movw	r30, r24
     d06:	e1 70       	andi	r30, 0x01	; 1
     d08:	f0 70       	andi	r31, 0x00	; 0
     d0a:	30 97       	sbiw	r30, 0x00	; 0
     d0c:	29 f0       	breq	.+10     	; 0xd18 <__mulsf3+0x15e>
     d0e:	56 95       	lsr	r21
     d10:	47 95       	ror	r20
     d12:	37 95       	ror	r19
     d14:	27 95       	ror	r18
     d16:	50 68       	ori	r21, 0x80	; 128
     d18:	b6 95       	lsr	r27
     d1a:	a7 95       	ror	r26
     d1c:	97 95       	ror	r25
     d1e:	87 95       	ror	r24
     d20:	6f 5f       	subi	r22, 0xFF	; 255
     d22:	7f 4f       	sbci	r23, 0xFF	; 255
     d24:	b7 fd       	sbrc	r27, 7
     d26:	ee cf       	rjmp	.-36     	; 0xd04 <__mulsf3+0x14a>
     d28:	0c c0       	rjmp	.+24     	; 0xd42 <__mulsf3+0x188>
     d2a:	88 0f       	add	r24, r24
     d2c:	99 1f       	adc	r25, r25
     d2e:	aa 1f       	adc	r26, r26
     d30:	bb 1f       	adc	r27, r27
     d32:	57 fd       	sbrc	r21, 7
     d34:	81 60       	ori	r24, 0x01	; 1
     d36:	22 0f       	add	r18, r18
     d38:	33 1f       	adc	r19, r19
     d3a:	44 1f       	adc	r20, r20
     d3c:	55 1f       	adc	r21, r21
     d3e:	61 50       	subi	r22, 0x01	; 1
     d40:	70 40       	sbci	r23, 0x00	; 0
     d42:	80 30       	cpi	r24, 0x00	; 0
     d44:	e0 e0       	ldi	r30, 0x00	; 0
     d46:	9e 07       	cpc	r25, r30
     d48:	e0 e0       	ldi	r30, 0x00	; 0
     d4a:	ae 07       	cpc	r26, r30
     d4c:	e0 e4       	ldi	r30, 0x40	; 64
     d4e:	be 07       	cpc	r27, r30
     d50:	60 f3       	brcs	.-40     	; 0xd2a <__mulsf3+0x170>
     d52:	6b 8f       	std	Y+27, r22	; 0x1b
     d54:	7c 8f       	std	Y+28, r23	; 0x1c
     d56:	6f e7       	ldi	r22, 0x7F	; 127
     d58:	e6 2e       	mov	r14, r22
     d5a:	f1 2c       	mov	r15, r1
     d5c:	01 2d       	mov	r16, r1
     d5e:	11 2d       	mov	r17, r1
     d60:	e8 22       	and	r14, r24
     d62:	f9 22       	and	r15, r25
     d64:	0a 23       	and	r16, r26
     d66:	1b 23       	and	r17, r27
     d68:	60 e4       	ldi	r22, 0x40	; 64
     d6a:	e6 16       	cp	r14, r22
     d6c:	f1 04       	cpc	r15, r1
     d6e:	01 05       	cpc	r16, r1
     d70:	11 05       	cpc	r17, r1
     d72:	61 f4       	brne	.+24     	; 0xd8c <__mulsf3+0x1d2>
     d74:	87 fd       	sbrc	r24, 7
     d76:	0a c0       	rjmp	.+20     	; 0xd8c <__mulsf3+0x1d2>
     d78:	21 15       	cp	r18, r1
     d7a:	31 05       	cpc	r19, r1
     d7c:	41 05       	cpc	r20, r1
     d7e:	51 05       	cpc	r21, r1
     d80:	29 f0       	breq	.+10     	; 0xd8c <__mulsf3+0x1d2>
     d82:	80 5c       	subi	r24, 0xC0	; 192
     d84:	9f 4f       	sbci	r25, 0xFF	; 255
     d86:	af 4f       	sbci	r26, 0xFF	; 255
     d88:	bf 4f       	sbci	r27, 0xFF	; 255
     d8a:	80 78       	andi	r24, 0x80	; 128
     d8c:	8d 8f       	std	Y+29, r24	; 0x1d
     d8e:	9e 8f       	std	Y+30, r25	; 0x1e
     d90:	af 8f       	std	Y+31, r26	; 0x1f
     d92:	b8 a3       	std	Y+32, r27	; 0x20
     d94:	83 e0       	ldi	r24, 0x03	; 3
     d96:	89 8f       	std	Y+25, r24	; 0x19
     d98:	ce 01       	movw	r24, r28
     d9a:	49 96       	adiw	r24, 0x19	; 25
     d9c:	02 c0       	rjmp	.+4      	; 0xda2 <__mulsf3+0x1e8>
     d9e:	80 e0       	ldi	r24, 0x00	; 0
     da0:	91 e0       	ldi	r25, 0x01	; 1
     da2:	0e 94 b9 07 	call	0xf72	; 0xf72 <__pack_f>
     da6:	a0 96       	adiw	r28, 0x20	; 32
     da8:	e2 e1       	ldi	r30, 0x12	; 18
     daa:	0c 94 8c 09 	jmp	0x1318	; 0x1318 <__epilogue_restores__>

00000dae <__gtsf2>:
     dae:	a8 e1       	ldi	r26, 0x18	; 24
     db0:	b0 e0       	ldi	r27, 0x00	; 0
     db2:	ed ed       	ldi	r30, 0xDD	; 221
     db4:	f6 e0       	ldi	r31, 0x06	; 6
     db6:	0c 94 7c 09 	jmp	0x12f8	; 0x12f8 <__prologue_saves__+0x18>
     dba:	69 83       	std	Y+1, r22	; 0x01
     dbc:	7a 83       	std	Y+2, r23	; 0x02
     dbe:	8b 83       	std	Y+3, r24	; 0x03
     dc0:	9c 83       	std	Y+4, r25	; 0x04
     dc2:	2d 83       	std	Y+5, r18	; 0x05
     dc4:	3e 83       	std	Y+6, r19	; 0x06
     dc6:	4f 83       	std	Y+7, r20	; 0x07
     dc8:	58 87       	std	Y+8, r21	; 0x08
     dca:	8e 01       	movw	r16, r28
     dcc:	07 5f       	subi	r16, 0xF7	; 247
     dce:	1f 4f       	sbci	r17, 0xFF	; 255
     dd0:	ce 01       	movw	r24, r28
     dd2:	01 96       	adiw	r24, 0x01	; 1
     dd4:	b8 01       	movw	r22, r16
     dd6:	0e 94 87 08 	call	0x110e	; 0x110e <__unpack_f>
     dda:	81 e1       	ldi	r24, 0x11	; 17
     ddc:	e8 2e       	mov	r14, r24
     dde:	f1 2c       	mov	r15, r1
     de0:	ec 0e       	add	r14, r28
     de2:	fd 1e       	adc	r15, r29
     de4:	ce 01       	movw	r24, r28
     de6:	05 96       	adiw	r24, 0x05	; 5
     de8:	b7 01       	movw	r22, r14
     dea:	0e 94 87 08 	call	0x110e	; 0x110e <__unpack_f>
     dee:	89 85       	ldd	r24, Y+9	; 0x09
     df0:	82 30       	cpi	r24, 0x02	; 2
     df2:	40 f0       	brcs	.+16     	; 0xe04 <__gtsf2+0x56>
     df4:	89 89       	ldd	r24, Y+17	; 0x11
     df6:	82 30       	cpi	r24, 0x02	; 2
     df8:	28 f0       	brcs	.+10     	; 0xe04 <__gtsf2+0x56>
     dfa:	c8 01       	movw	r24, r16
     dfc:	b7 01       	movw	r22, r14
     dfe:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <__fpcmp_parts_f>
     e02:	01 c0       	rjmp	.+2      	; 0xe06 <__gtsf2+0x58>
     e04:	8f ef       	ldi	r24, 0xFF	; 255
     e06:	68 96       	adiw	r28, 0x18	; 24
     e08:	e6 e0       	ldi	r30, 0x06	; 6
     e0a:	0c 94 98 09 	jmp	0x1330	; 0x1330 <__epilogue_restores__+0x18>

00000e0e <__gesf2>:
     e0e:	a8 e1       	ldi	r26, 0x18	; 24
     e10:	b0 e0       	ldi	r27, 0x00	; 0
     e12:	ed e0       	ldi	r30, 0x0D	; 13
     e14:	f7 e0       	ldi	r31, 0x07	; 7
     e16:	0c 94 7c 09 	jmp	0x12f8	; 0x12f8 <__prologue_saves__+0x18>
     e1a:	69 83       	std	Y+1, r22	; 0x01
     e1c:	7a 83       	std	Y+2, r23	; 0x02
     e1e:	8b 83       	std	Y+3, r24	; 0x03
     e20:	9c 83       	std	Y+4, r25	; 0x04
     e22:	2d 83       	std	Y+5, r18	; 0x05
     e24:	3e 83       	std	Y+6, r19	; 0x06
     e26:	4f 83       	std	Y+7, r20	; 0x07
     e28:	58 87       	std	Y+8, r21	; 0x08
     e2a:	8e 01       	movw	r16, r28
     e2c:	07 5f       	subi	r16, 0xF7	; 247
     e2e:	1f 4f       	sbci	r17, 0xFF	; 255
     e30:	ce 01       	movw	r24, r28
     e32:	01 96       	adiw	r24, 0x01	; 1
     e34:	b8 01       	movw	r22, r16
     e36:	0e 94 87 08 	call	0x110e	; 0x110e <__unpack_f>
     e3a:	81 e1       	ldi	r24, 0x11	; 17
     e3c:	e8 2e       	mov	r14, r24
     e3e:	f1 2c       	mov	r15, r1
     e40:	ec 0e       	add	r14, r28
     e42:	fd 1e       	adc	r15, r29
     e44:	ce 01       	movw	r24, r28
     e46:	05 96       	adiw	r24, 0x05	; 5
     e48:	b7 01       	movw	r22, r14
     e4a:	0e 94 87 08 	call	0x110e	; 0x110e <__unpack_f>
     e4e:	89 85       	ldd	r24, Y+9	; 0x09
     e50:	82 30       	cpi	r24, 0x02	; 2
     e52:	40 f0       	brcs	.+16     	; 0xe64 <__gesf2+0x56>
     e54:	89 89       	ldd	r24, Y+17	; 0x11
     e56:	82 30       	cpi	r24, 0x02	; 2
     e58:	28 f0       	brcs	.+10     	; 0xe64 <__gesf2+0x56>
     e5a:	c8 01       	movw	r24, r16
     e5c:	b7 01       	movw	r22, r14
     e5e:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <__fpcmp_parts_f>
     e62:	01 c0       	rjmp	.+2      	; 0xe66 <__gesf2+0x58>
     e64:	8f ef       	ldi	r24, 0xFF	; 255
     e66:	68 96       	adiw	r28, 0x18	; 24
     e68:	e6 e0       	ldi	r30, 0x06	; 6
     e6a:	0c 94 98 09 	jmp	0x1330	; 0x1330 <__epilogue_restores__+0x18>

00000e6e <__ltsf2>:
     e6e:	a8 e1       	ldi	r26, 0x18	; 24
     e70:	b0 e0       	ldi	r27, 0x00	; 0
     e72:	ed e3       	ldi	r30, 0x3D	; 61
     e74:	f7 e0       	ldi	r31, 0x07	; 7
     e76:	0c 94 7c 09 	jmp	0x12f8	; 0x12f8 <__prologue_saves__+0x18>
     e7a:	69 83       	std	Y+1, r22	; 0x01
     e7c:	7a 83       	std	Y+2, r23	; 0x02
     e7e:	8b 83       	std	Y+3, r24	; 0x03
     e80:	9c 83       	std	Y+4, r25	; 0x04
     e82:	2d 83       	std	Y+5, r18	; 0x05
     e84:	3e 83       	std	Y+6, r19	; 0x06
     e86:	4f 83       	std	Y+7, r20	; 0x07
     e88:	58 87       	std	Y+8, r21	; 0x08
     e8a:	8e 01       	movw	r16, r28
     e8c:	07 5f       	subi	r16, 0xF7	; 247
     e8e:	1f 4f       	sbci	r17, 0xFF	; 255
     e90:	ce 01       	movw	r24, r28
     e92:	01 96       	adiw	r24, 0x01	; 1
     e94:	b8 01       	movw	r22, r16
     e96:	0e 94 87 08 	call	0x110e	; 0x110e <__unpack_f>
     e9a:	81 e1       	ldi	r24, 0x11	; 17
     e9c:	e8 2e       	mov	r14, r24
     e9e:	f1 2c       	mov	r15, r1
     ea0:	ec 0e       	add	r14, r28
     ea2:	fd 1e       	adc	r15, r29
     ea4:	ce 01       	movw	r24, r28
     ea6:	05 96       	adiw	r24, 0x05	; 5
     ea8:	b7 01       	movw	r22, r14
     eaa:	0e 94 87 08 	call	0x110e	; 0x110e <__unpack_f>
     eae:	89 85       	ldd	r24, Y+9	; 0x09
     eb0:	82 30       	cpi	r24, 0x02	; 2
     eb2:	40 f0       	brcs	.+16     	; 0xec4 <__ltsf2+0x56>
     eb4:	89 89       	ldd	r24, Y+17	; 0x11
     eb6:	82 30       	cpi	r24, 0x02	; 2
     eb8:	28 f0       	brcs	.+10     	; 0xec4 <__ltsf2+0x56>
     eba:	c8 01       	movw	r24, r16
     ebc:	b7 01       	movw	r22, r14
     ebe:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <__fpcmp_parts_f>
     ec2:	01 c0       	rjmp	.+2      	; 0xec6 <__ltsf2+0x58>
     ec4:	81 e0       	ldi	r24, 0x01	; 1
     ec6:	68 96       	adiw	r28, 0x18	; 24
     ec8:	e6 e0       	ldi	r30, 0x06	; 6
     eca:	0c 94 98 09 	jmp	0x1330	; 0x1330 <__epilogue_restores__+0x18>

00000ece <__fixsfsi>:
     ece:	ac e0       	ldi	r26, 0x0C	; 12
     ed0:	b0 e0       	ldi	r27, 0x00	; 0
     ed2:	ed e6       	ldi	r30, 0x6D	; 109
     ed4:	f7 e0       	ldi	r31, 0x07	; 7
     ed6:	0c 94 80 09 	jmp	0x1300	; 0x1300 <__prologue_saves__+0x20>
     eda:	69 83       	std	Y+1, r22	; 0x01
     edc:	7a 83       	std	Y+2, r23	; 0x02
     ede:	8b 83       	std	Y+3, r24	; 0x03
     ee0:	9c 83       	std	Y+4, r25	; 0x04
     ee2:	ce 01       	movw	r24, r28
     ee4:	01 96       	adiw	r24, 0x01	; 1
     ee6:	be 01       	movw	r22, r28
     ee8:	6b 5f       	subi	r22, 0xFB	; 251
     eea:	7f 4f       	sbci	r23, 0xFF	; 255
     eec:	0e 94 87 08 	call	0x110e	; 0x110e <__unpack_f>
     ef0:	8d 81       	ldd	r24, Y+5	; 0x05
     ef2:	82 30       	cpi	r24, 0x02	; 2
     ef4:	81 f1       	breq	.+96     	; 0xf56 <__fixsfsi+0x88>
     ef6:	82 30       	cpi	r24, 0x02	; 2
     ef8:	70 f1       	brcs	.+92     	; 0xf56 <__fixsfsi+0x88>
     efa:	84 30       	cpi	r24, 0x04	; 4
     efc:	21 f4       	brne	.+8      	; 0xf06 <__fixsfsi+0x38>
     efe:	8e 81       	ldd	r24, Y+6	; 0x06
     f00:	88 23       	and	r24, r24
     f02:	69 f1       	breq	.+90     	; 0xf5e <__fixsfsi+0x90>
     f04:	0a c0       	rjmp	.+20     	; 0xf1a <__fixsfsi+0x4c>
     f06:	2f 81       	ldd	r18, Y+7	; 0x07
     f08:	38 85       	ldd	r19, Y+8	; 0x08
     f0a:	37 fd       	sbrc	r19, 7
     f0c:	24 c0       	rjmp	.+72     	; 0xf56 <__fixsfsi+0x88>
     f0e:	6e 81       	ldd	r22, Y+6	; 0x06
     f10:	2f 31       	cpi	r18, 0x1F	; 31
     f12:	31 05       	cpc	r19, r1
     f14:	3c f0       	brlt	.+14     	; 0xf24 <__fixsfsi+0x56>
     f16:	66 23       	and	r22, r22
     f18:	11 f1       	breq	.+68     	; 0xf5e <__fixsfsi+0x90>
     f1a:	20 e0       	ldi	r18, 0x00	; 0
     f1c:	30 e0       	ldi	r19, 0x00	; 0
     f1e:	40 e0       	ldi	r20, 0x00	; 0
     f20:	50 e8       	ldi	r21, 0x80	; 128
     f22:	21 c0       	rjmp	.+66     	; 0xf66 <__fixsfsi+0x98>
     f24:	8e e1       	ldi	r24, 0x1E	; 30
     f26:	90 e0       	ldi	r25, 0x00	; 0
     f28:	82 1b       	sub	r24, r18
     f2a:	93 0b       	sbc	r25, r19
     f2c:	29 85       	ldd	r18, Y+9	; 0x09
     f2e:	3a 85       	ldd	r19, Y+10	; 0x0a
     f30:	4b 85       	ldd	r20, Y+11	; 0x0b
     f32:	5c 85       	ldd	r21, Y+12	; 0x0c
     f34:	04 c0       	rjmp	.+8      	; 0xf3e <__fixsfsi+0x70>
     f36:	56 95       	lsr	r21
     f38:	47 95       	ror	r20
     f3a:	37 95       	ror	r19
     f3c:	27 95       	ror	r18
     f3e:	8a 95       	dec	r24
     f40:	d2 f7       	brpl	.-12     	; 0xf36 <__fixsfsi+0x68>
     f42:	66 23       	and	r22, r22
     f44:	81 f0       	breq	.+32     	; 0xf66 <__fixsfsi+0x98>
     f46:	50 95       	com	r21
     f48:	40 95       	com	r20
     f4a:	30 95       	com	r19
     f4c:	21 95       	neg	r18
     f4e:	3f 4f       	sbci	r19, 0xFF	; 255
     f50:	4f 4f       	sbci	r20, 0xFF	; 255
     f52:	5f 4f       	sbci	r21, 0xFF	; 255
     f54:	08 c0       	rjmp	.+16     	; 0xf66 <__fixsfsi+0x98>
     f56:	20 e0       	ldi	r18, 0x00	; 0
     f58:	30 e0       	ldi	r19, 0x00	; 0
     f5a:	a9 01       	movw	r20, r18
     f5c:	04 c0       	rjmp	.+8      	; 0xf66 <__fixsfsi+0x98>
     f5e:	2f ef       	ldi	r18, 0xFF	; 255
     f60:	3f ef       	ldi	r19, 0xFF	; 255
     f62:	4f ef       	ldi	r20, 0xFF	; 255
     f64:	5f e7       	ldi	r21, 0x7F	; 127
     f66:	b9 01       	movw	r22, r18
     f68:	ca 01       	movw	r24, r20
     f6a:	2c 96       	adiw	r28, 0x0c	; 12
     f6c:	e2 e0       	ldi	r30, 0x02	; 2
     f6e:	0c 94 9c 09 	jmp	0x1338	; 0x1338 <__epilogue_restores__+0x20>

00000f72 <__pack_f>:
     f72:	ef 92       	push	r14
     f74:	ff 92       	push	r15
     f76:	0f 93       	push	r16
     f78:	1f 93       	push	r17
     f7a:	cf 93       	push	r28
     f7c:	df 93       	push	r29
     f7e:	fc 01       	movw	r30, r24
     f80:	24 81       	ldd	r18, Z+4	; 0x04
     f82:	35 81       	ldd	r19, Z+5	; 0x05
     f84:	46 81       	ldd	r20, Z+6	; 0x06
     f86:	57 81       	ldd	r21, Z+7	; 0x07
     f88:	61 81       	ldd	r22, Z+1	; 0x01
     f8a:	80 81       	ld	r24, Z
     f8c:	82 30       	cpi	r24, 0x02	; 2
     f8e:	20 f4       	brcc	.+8      	; 0xf98 <__pack_f+0x26>
     f90:	40 61       	ori	r20, 0x10	; 16
     f92:	ef ef       	ldi	r30, 0xFF	; 255
     f94:	f0 e0       	ldi	r31, 0x00	; 0
     f96:	a3 c0       	rjmp	.+326    	; 0x10de <__pack_f+0x16c>
     f98:	84 30       	cpi	r24, 0x04	; 4
     f9a:	09 f4       	brne	.+2      	; 0xf9e <__pack_f+0x2c>
     f9c:	9b c0       	rjmp	.+310    	; 0x10d4 <__pack_f+0x162>
     f9e:	82 30       	cpi	r24, 0x02	; 2
     fa0:	09 f4       	brne	.+2      	; 0xfa4 <__pack_f+0x32>
     fa2:	92 c0       	rjmp	.+292    	; 0x10c8 <__pack_f+0x156>
     fa4:	21 15       	cp	r18, r1
     fa6:	31 05       	cpc	r19, r1
     fa8:	41 05       	cpc	r20, r1
     faa:	51 05       	cpc	r21, r1
     fac:	09 f4       	brne	.+2      	; 0xfb0 <__pack_f+0x3e>
     fae:	8f c0       	rjmp	.+286    	; 0x10ce <__pack_f+0x15c>
     fb0:	02 80       	ldd	r0, Z+2	; 0x02
     fb2:	f3 81       	ldd	r31, Z+3	; 0x03
     fb4:	e0 2d       	mov	r30, r0
     fb6:	8f ef       	ldi	r24, 0xFF	; 255
     fb8:	e2 38       	cpi	r30, 0x82	; 130
     fba:	f8 07       	cpc	r31, r24
     fbc:	0c f0       	brlt	.+2      	; 0xfc0 <__pack_f+0x4e>
     fbe:	5a c0       	rjmp	.+180    	; 0x1074 <__pack_f+0x102>
     fc0:	c2 e8       	ldi	r28, 0x82	; 130
     fc2:	df ef       	ldi	r29, 0xFF	; 255
     fc4:	ce 1b       	sub	r28, r30
     fc6:	df 0b       	sbc	r29, r31
     fc8:	ca 31       	cpi	r28, 0x1A	; 26
     fca:	d1 05       	cpc	r29, r1
     fcc:	6c f5       	brge	.+90     	; 0x1028 <__pack_f+0xb6>
     fce:	79 01       	movw	r14, r18
     fd0:	8a 01       	movw	r16, r20
     fd2:	0c 2e       	mov	r0, r28
     fd4:	04 c0       	rjmp	.+8      	; 0xfde <__pack_f+0x6c>
     fd6:	16 95       	lsr	r17
     fd8:	07 95       	ror	r16
     fda:	f7 94       	ror	r15
     fdc:	e7 94       	ror	r14
     fde:	0a 94       	dec	r0
     fe0:	d2 f7       	brpl	.-12     	; 0xfd6 <__pack_f+0x64>
     fe2:	81 e0       	ldi	r24, 0x01	; 1
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	a0 e0       	ldi	r26, 0x00	; 0
     fe8:	b0 e0       	ldi	r27, 0x00	; 0
     fea:	0c 2e       	mov	r0, r28
     fec:	04 c0       	rjmp	.+8      	; 0xff6 <__pack_f+0x84>
     fee:	88 0f       	add	r24, r24
     ff0:	99 1f       	adc	r25, r25
     ff2:	aa 1f       	adc	r26, r26
     ff4:	bb 1f       	adc	r27, r27
     ff6:	0a 94       	dec	r0
     ff8:	d2 f7       	brpl	.-12     	; 0xfee <__pack_f+0x7c>
     ffa:	01 97       	sbiw	r24, 0x01	; 1
     ffc:	a1 09       	sbc	r26, r1
     ffe:	b1 09       	sbc	r27, r1
    1000:	82 23       	and	r24, r18
    1002:	93 23       	and	r25, r19
    1004:	a4 23       	and	r26, r20
    1006:	b5 23       	and	r27, r21
    1008:	21 e0       	ldi	r18, 0x01	; 1
    100a:	30 e0       	ldi	r19, 0x00	; 0
    100c:	40 e0       	ldi	r20, 0x00	; 0
    100e:	50 e0       	ldi	r21, 0x00	; 0
    1010:	00 97       	sbiw	r24, 0x00	; 0
    1012:	a1 05       	cpc	r26, r1
    1014:	b1 05       	cpc	r27, r1
    1016:	19 f4       	brne	.+6      	; 0x101e <__pack_f+0xac>
    1018:	20 e0       	ldi	r18, 0x00	; 0
    101a:	30 e0       	ldi	r19, 0x00	; 0
    101c:	a9 01       	movw	r20, r18
    101e:	2e 29       	or	r18, r14
    1020:	3f 29       	or	r19, r15
    1022:	40 2b       	or	r20, r16
    1024:	51 2b       	or	r21, r17
    1026:	03 c0       	rjmp	.+6      	; 0x102e <__pack_f+0xbc>
    1028:	20 e0       	ldi	r18, 0x00	; 0
    102a:	30 e0       	ldi	r19, 0x00	; 0
    102c:	a9 01       	movw	r20, r18
    102e:	da 01       	movw	r26, r20
    1030:	c9 01       	movw	r24, r18
    1032:	8f 77       	andi	r24, 0x7F	; 127
    1034:	90 70       	andi	r25, 0x00	; 0
    1036:	a0 70       	andi	r26, 0x00	; 0
    1038:	b0 70       	andi	r27, 0x00	; 0
    103a:	80 34       	cpi	r24, 0x40	; 64
    103c:	91 05       	cpc	r25, r1
    103e:	a1 05       	cpc	r26, r1
    1040:	b1 05       	cpc	r27, r1
    1042:	39 f4       	brne	.+14     	; 0x1052 <__pack_f+0xe0>
    1044:	27 ff       	sbrs	r18, 7
    1046:	09 c0       	rjmp	.+18     	; 0x105a <__pack_f+0xe8>
    1048:	20 5c       	subi	r18, 0xC0	; 192
    104a:	3f 4f       	sbci	r19, 0xFF	; 255
    104c:	4f 4f       	sbci	r20, 0xFF	; 255
    104e:	5f 4f       	sbci	r21, 0xFF	; 255
    1050:	04 c0       	rjmp	.+8      	; 0x105a <__pack_f+0xe8>
    1052:	21 5c       	subi	r18, 0xC1	; 193
    1054:	3f 4f       	sbci	r19, 0xFF	; 255
    1056:	4f 4f       	sbci	r20, 0xFF	; 255
    1058:	5f 4f       	sbci	r21, 0xFF	; 255
    105a:	e1 e0       	ldi	r30, 0x01	; 1
    105c:	f0 e0       	ldi	r31, 0x00	; 0
    105e:	20 30       	cpi	r18, 0x00	; 0
    1060:	80 e0       	ldi	r24, 0x00	; 0
    1062:	38 07       	cpc	r19, r24
    1064:	80 e0       	ldi	r24, 0x00	; 0
    1066:	48 07       	cpc	r20, r24
    1068:	80 e4       	ldi	r24, 0x40	; 64
    106a:	58 07       	cpc	r21, r24
    106c:	28 f5       	brcc	.+74     	; 0x10b8 <__pack_f+0x146>
    106e:	e0 e0       	ldi	r30, 0x00	; 0
    1070:	f0 e0       	ldi	r31, 0x00	; 0
    1072:	22 c0       	rjmp	.+68     	; 0x10b8 <__pack_f+0x146>
    1074:	e0 38       	cpi	r30, 0x80	; 128
    1076:	f1 05       	cpc	r31, r1
    1078:	6c f5       	brge	.+90     	; 0x10d4 <__pack_f+0x162>
    107a:	e1 58       	subi	r30, 0x81	; 129
    107c:	ff 4f       	sbci	r31, 0xFF	; 255
    107e:	da 01       	movw	r26, r20
    1080:	c9 01       	movw	r24, r18
    1082:	8f 77       	andi	r24, 0x7F	; 127
    1084:	90 70       	andi	r25, 0x00	; 0
    1086:	a0 70       	andi	r26, 0x00	; 0
    1088:	b0 70       	andi	r27, 0x00	; 0
    108a:	80 34       	cpi	r24, 0x40	; 64
    108c:	91 05       	cpc	r25, r1
    108e:	a1 05       	cpc	r26, r1
    1090:	b1 05       	cpc	r27, r1
    1092:	39 f4       	brne	.+14     	; 0x10a2 <__pack_f+0x130>
    1094:	27 ff       	sbrs	r18, 7
    1096:	09 c0       	rjmp	.+18     	; 0x10aa <__pack_f+0x138>
    1098:	20 5c       	subi	r18, 0xC0	; 192
    109a:	3f 4f       	sbci	r19, 0xFF	; 255
    109c:	4f 4f       	sbci	r20, 0xFF	; 255
    109e:	5f 4f       	sbci	r21, 0xFF	; 255
    10a0:	04 c0       	rjmp	.+8      	; 0x10aa <__pack_f+0x138>
    10a2:	21 5c       	subi	r18, 0xC1	; 193
    10a4:	3f 4f       	sbci	r19, 0xFF	; 255
    10a6:	4f 4f       	sbci	r20, 0xFF	; 255
    10a8:	5f 4f       	sbci	r21, 0xFF	; 255
    10aa:	57 ff       	sbrs	r21, 7
    10ac:	05 c0       	rjmp	.+10     	; 0x10b8 <__pack_f+0x146>
    10ae:	56 95       	lsr	r21
    10b0:	47 95       	ror	r20
    10b2:	37 95       	ror	r19
    10b4:	27 95       	ror	r18
    10b6:	31 96       	adiw	r30, 0x01	; 1
    10b8:	87 e0       	ldi	r24, 0x07	; 7
    10ba:	56 95       	lsr	r21
    10bc:	47 95       	ror	r20
    10be:	37 95       	ror	r19
    10c0:	27 95       	ror	r18
    10c2:	8a 95       	dec	r24
    10c4:	d1 f7       	brne	.-12     	; 0x10ba <__pack_f+0x148>
    10c6:	0b c0       	rjmp	.+22     	; 0x10de <__pack_f+0x16c>
    10c8:	e0 e0       	ldi	r30, 0x00	; 0
    10ca:	f0 e0       	ldi	r31, 0x00	; 0
    10cc:	05 c0       	rjmp	.+10     	; 0x10d8 <__pack_f+0x166>
    10ce:	e0 e0       	ldi	r30, 0x00	; 0
    10d0:	f0 e0       	ldi	r31, 0x00	; 0
    10d2:	05 c0       	rjmp	.+10     	; 0x10de <__pack_f+0x16c>
    10d4:	ef ef       	ldi	r30, 0xFF	; 255
    10d6:	f0 e0       	ldi	r31, 0x00	; 0
    10d8:	20 e0       	ldi	r18, 0x00	; 0
    10da:	30 e0       	ldi	r19, 0x00	; 0
    10dc:	a9 01       	movw	r20, r18
    10de:	8e 2f       	mov	r24, r30
    10e0:	87 95       	ror	r24
    10e2:	88 27       	eor	r24, r24
    10e4:	87 95       	ror	r24
    10e6:	94 2f       	mov	r25, r20
    10e8:	9f 77       	andi	r25, 0x7F	; 127
    10ea:	67 95       	ror	r22
    10ec:	66 27       	eor	r22, r22
    10ee:	67 95       	ror	r22
    10f0:	e6 95       	lsr	r30
    10f2:	e2 2e       	mov	r14, r18
    10f4:	a9 2f       	mov	r26, r25
    10f6:	a8 2b       	or	r26, r24
    10f8:	fe 2f       	mov	r31, r30
    10fa:	f6 2b       	or	r31, r22
    10fc:	62 2f       	mov	r22, r18
    10fe:	73 2f       	mov	r23, r19
    1100:	8a 2f       	mov	r24, r26
    1102:	9f 2f       	mov	r25, r31
    1104:	cd b7       	in	r28, 0x3d	; 61
    1106:	de b7       	in	r29, 0x3e	; 62
    1108:	e6 e0       	ldi	r30, 0x06	; 6
    110a:	0c 94 98 09 	jmp	0x1330	; 0x1330 <__epilogue_restores__+0x18>

0000110e <__unpack_f>:
    110e:	dc 01       	movw	r26, r24
    1110:	fb 01       	movw	r30, r22
    1112:	2c 91       	ld	r18, X
    1114:	11 96       	adiw	r26, 0x01	; 1
    1116:	3c 91       	ld	r19, X
    1118:	11 97       	sbiw	r26, 0x01	; 1
    111a:	12 96       	adiw	r26, 0x02	; 2
    111c:	8c 91       	ld	r24, X
    111e:	12 97       	sbiw	r26, 0x02	; 2
    1120:	48 2f       	mov	r20, r24
    1122:	4f 77       	andi	r20, 0x7F	; 127
    1124:	50 e0       	ldi	r21, 0x00	; 0
    1126:	98 2f       	mov	r25, r24
    1128:	99 1f       	adc	r25, r25
    112a:	99 27       	eor	r25, r25
    112c:	99 1f       	adc	r25, r25
    112e:	13 96       	adiw	r26, 0x03	; 3
    1130:	6c 91       	ld	r22, X
    1132:	13 97       	sbiw	r26, 0x03	; 3
    1134:	86 2f       	mov	r24, r22
    1136:	88 0f       	add	r24, r24
    1138:	89 2b       	or	r24, r25
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	66 1f       	adc	r22, r22
    113e:	66 27       	eor	r22, r22
    1140:	66 1f       	adc	r22, r22
    1142:	61 83       	std	Z+1, r22	; 0x01
    1144:	00 97       	sbiw	r24, 0x00	; 0
    1146:	39 f5       	brne	.+78     	; 0x1196 <__unpack_f+0x88>
    1148:	21 15       	cp	r18, r1
    114a:	31 05       	cpc	r19, r1
    114c:	41 05       	cpc	r20, r1
    114e:	51 05       	cpc	r21, r1
    1150:	11 f4       	brne	.+4      	; 0x1156 <__unpack_f+0x48>
    1152:	82 e0       	ldi	r24, 0x02	; 2
    1154:	29 c0       	rjmp	.+82     	; 0x11a8 <__unpack_f+0x9a>
    1156:	82 e8       	ldi	r24, 0x82	; 130
    1158:	9f ef       	ldi	r25, 0xFF	; 255
    115a:	93 83       	std	Z+3, r25	; 0x03
    115c:	82 83       	std	Z+2, r24	; 0x02
    115e:	67 e0       	ldi	r22, 0x07	; 7
    1160:	22 0f       	add	r18, r18
    1162:	33 1f       	adc	r19, r19
    1164:	44 1f       	adc	r20, r20
    1166:	55 1f       	adc	r21, r21
    1168:	6a 95       	dec	r22
    116a:	d1 f7       	brne	.-12     	; 0x1160 <__unpack_f+0x52>
    116c:	83 e0       	ldi	r24, 0x03	; 3
    116e:	80 83       	st	Z, r24
    1170:	09 c0       	rjmp	.+18     	; 0x1184 <__unpack_f+0x76>
    1172:	22 0f       	add	r18, r18
    1174:	33 1f       	adc	r19, r19
    1176:	44 1f       	adc	r20, r20
    1178:	55 1f       	adc	r21, r21
    117a:	82 81       	ldd	r24, Z+2	; 0x02
    117c:	93 81       	ldd	r25, Z+3	; 0x03
    117e:	01 97       	sbiw	r24, 0x01	; 1
    1180:	93 83       	std	Z+3, r25	; 0x03
    1182:	82 83       	std	Z+2, r24	; 0x02
    1184:	20 30       	cpi	r18, 0x00	; 0
    1186:	80 e0       	ldi	r24, 0x00	; 0
    1188:	38 07       	cpc	r19, r24
    118a:	80 e0       	ldi	r24, 0x00	; 0
    118c:	48 07       	cpc	r20, r24
    118e:	80 e4       	ldi	r24, 0x40	; 64
    1190:	58 07       	cpc	r21, r24
    1192:	78 f3       	brcs	.-34     	; 0x1172 <__unpack_f+0x64>
    1194:	20 c0       	rjmp	.+64     	; 0x11d6 <__unpack_f+0xc8>
    1196:	8f 3f       	cpi	r24, 0xFF	; 255
    1198:	91 05       	cpc	r25, r1
    119a:	79 f4       	brne	.+30     	; 0x11ba <__unpack_f+0xac>
    119c:	21 15       	cp	r18, r1
    119e:	31 05       	cpc	r19, r1
    11a0:	41 05       	cpc	r20, r1
    11a2:	51 05       	cpc	r21, r1
    11a4:	19 f4       	brne	.+6      	; 0x11ac <__unpack_f+0x9e>
    11a6:	84 e0       	ldi	r24, 0x04	; 4
    11a8:	80 83       	st	Z, r24
    11aa:	08 95       	ret
    11ac:	44 ff       	sbrs	r20, 4
    11ae:	03 c0       	rjmp	.+6      	; 0x11b6 <__unpack_f+0xa8>
    11b0:	81 e0       	ldi	r24, 0x01	; 1
    11b2:	80 83       	st	Z, r24
    11b4:	10 c0       	rjmp	.+32     	; 0x11d6 <__unpack_f+0xc8>
    11b6:	10 82       	st	Z, r1
    11b8:	0e c0       	rjmp	.+28     	; 0x11d6 <__unpack_f+0xc8>
    11ba:	8f 57       	subi	r24, 0x7F	; 127
    11bc:	90 40       	sbci	r25, 0x00	; 0
    11be:	93 83       	std	Z+3, r25	; 0x03
    11c0:	82 83       	std	Z+2, r24	; 0x02
    11c2:	83 e0       	ldi	r24, 0x03	; 3
    11c4:	80 83       	st	Z, r24
    11c6:	87 e0       	ldi	r24, 0x07	; 7
    11c8:	22 0f       	add	r18, r18
    11ca:	33 1f       	adc	r19, r19
    11cc:	44 1f       	adc	r20, r20
    11ce:	55 1f       	adc	r21, r21
    11d0:	8a 95       	dec	r24
    11d2:	d1 f7       	brne	.-12     	; 0x11c8 <__unpack_f+0xba>
    11d4:	50 64       	ori	r21, 0x40	; 64
    11d6:	24 83       	std	Z+4, r18	; 0x04
    11d8:	35 83       	std	Z+5, r19	; 0x05
    11da:	46 83       	std	Z+6, r20	; 0x06
    11dc:	57 83       	std	Z+7, r21	; 0x07
    11de:	08 95       	ret

000011e0 <__fpcmp_parts_f>:
    11e0:	fc 01       	movw	r30, r24
    11e2:	db 01       	movw	r26, r22
    11e4:	90 81       	ld	r25, Z
    11e6:	92 30       	cpi	r25, 0x02	; 2
    11e8:	08 f4       	brcc	.+2      	; 0x11ec <__fpcmp_parts_f+0xc>
    11ea:	49 c0       	rjmp	.+146    	; 0x127e <__fpcmp_parts_f+0x9e>
    11ec:	8c 91       	ld	r24, X
    11ee:	82 30       	cpi	r24, 0x02	; 2
    11f0:	08 f4       	brcc	.+2      	; 0x11f4 <__fpcmp_parts_f+0x14>
    11f2:	45 c0       	rjmp	.+138    	; 0x127e <__fpcmp_parts_f+0x9e>
    11f4:	94 30       	cpi	r25, 0x04	; 4
    11f6:	51 f4       	brne	.+20     	; 0x120c <__fpcmp_parts_f+0x2c>
    11f8:	61 81       	ldd	r22, Z+1	; 0x01
    11fa:	84 30       	cpi	r24, 0x04	; 4
    11fc:	b1 f5       	brne	.+108    	; 0x126a <__fpcmp_parts_f+0x8a>
    11fe:	11 96       	adiw	r26, 0x01	; 1
    1200:	2c 91       	ld	r18, X
    1202:	11 97       	sbiw	r26, 0x01	; 1
    1204:	30 e0       	ldi	r19, 0x00	; 0
    1206:	26 1b       	sub	r18, r22
    1208:	31 09       	sbc	r19, r1
    120a:	41 c0       	rjmp	.+130    	; 0x128e <__fpcmp_parts_f+0xae>
    120c:	84 30       	cpi	r24, 0x04	; 4
    120e:	21 f0       	breq	.+8      	; 0x1218 <__fpcmp_parts_f+0x38>
    1210:	92 30       	cpi	r25, 0x02	; 2
    1212:	41 f4       	brne	.+16     	; 0x1224 <__fpcmp_parts_f+0x44>
    1214:	82 30       	cpi	r24, 0x02	; 2
    1216:	b1 f1       	breq	.+108    	; 0x1284 <__fpcmp_parts_f+0xa4>
    1218:	11 96       	adiw	r26, 0x01	; 1
    121a:	8c 91       	ld	r24, X
    121c:	11 97       	sbiw	r26, 0x01	; 1
    121e:	88 23       	and	r24, r24
    1220:	a1 f1       	breq	.+104    	; 0x128a <__fpcmp_parts_f+0xaa>
    1222:	2d c0       	rjmp	.+90     	; 0x127e <__fpcmp_parts_f+0x9e>
    1224:	61 81       	ldd	r22, Z+1	; 0x01
    1226:	82 30       	cpi	r24, 0x02	; 2
    1228:	01 f1       	breq	.+64     	; 0x126a <__fpcmp_parts_f+0x8a>
    122a:	11 96       	adiw	r26, 0x01	; 1
    122c:	8c 91       	ld	r24, X
    122e:	11 97       	sbiw	r26, 0x01	; 1
    1230:	68 17       	cp	r22, r24
    1232:	d9 f4       	brne	.+54     	; 0x126a <__fpcmp_parts_f+0x8a>
    1234:	22 81       	ldd	r18, Z+2	; 0x02
    1236:	33 81       	ldd	r19, Z+3	; 0x03
    1238:	12 96       	adiw	r26, 0x02	; 2
    123a:	8d 91       	ld	r24, X+
    123c:	9c 91       	ld	r25, X
    123e:	13 97       	sbiw	r26, 0x03	; 3
    1240:	82 17       	cp	r24, r18
    1242:	93 07       	cpc	r25, r19
    1244:	94 f0       	brlt	.+36     	; 0x126a <__fpcmp_parts_f+0x8a>
    1246:	28 17       	cp	r18, r24
    1248:	39 07       	cpc	r19, r25
    124a:	bc f0       	brlt	.+46     	; 0x127a <__fpcmp_parts_f+0x9a>
    124c:	24 81       	ldd	r18, Z+4	; 0x04
    124e:	35 81       	ldd	r19, Z+5	; 0x05
    1250:	46 81       	ldd	r20, Z+6	; 0x06
    1252:	57 81       	ldd	r21, Z+7	; 0x07
    1254:	14 96       	adiw	r26, 0x04	; 4
    1256:	8d 91       	ld	r24, X+
    1258:	9d 91       	ld	r25, X+
    125a:	0d 90       	ld	r0, X+
    125c:	bc 91       	ld	r27, X
    125e:	a0 2d       	mov	r26, r0
    1260:	82 17       	cp	r24, r18
    1262:	93 07       	cpc	r25, r19
    1264:	a4 07       	cpc	r26, r20
    1266:	b5 07       	cpc	r27, r21
    1268:	18 f4       	brcc	.+6      	; 0x1270 <__fpcmp_parts_f+0x90>
    126a:	66 23       	and	r22, r22
    126c:	41 f0       	breq	.+16     	; 0x127e <__fpcmp_parts_f+0x9e>
    126e:	0d c0       	rjmp	.+26     	; 0x128a <__fpcmp_parts_f+0xaa>
    1270:	28 17       	cp	r18, r24
    1272:	39 07       	cpc	r19, r25
    1274:	4a 07       	cpc	r20, r26
    1276:	5b 07       	cpc	r21, r27
    1278:	28 f4       	brcc	.+10     	; 0x1284 <__fpcmp_parts_f+0xa4>
    127a:	66 23       	and	r22, r22
    127c:	31 f0       	breq	.+12     	; 0x128a <__fpcmp_parts_f+0xaa>
    127e:	21 e0       	ldi	r18, 0x01	; 1
    1280:	30 e0       	ldi	r19, 0x00	; 0
    1282:	05 c0       	rjmp	.+10     	; 0x128e <__fpcmp_parts_f+0xae>
    1284:	20 e0       	ldi	r18, 0x00	; 0
    1286:	30 e0       	ldi	r19, 0x00	; 0
    1288:	02 c0       	rjmp	.+4      	; 0x128e <__fpcmp_parts_f+0xae>
    128a:	2f ef       	ldi	r18, 0xFF	; 255
    128c:	3f ef       	ldi	r19, 0xFF	; 255
    128e:	c9 01       	movw	r24, r18
    1290:	08 95       	ret

00001292 <__divmodhi4>:
    1292:	97 fb       	bst	r25, 7
    1294:	09 2e       	mov	r0, r25
    1296:	07 26       	eor	r0, r23
    1298:	0a d0       	rcall	.+20     	; 0x12ae <__divmodhi4_neg1>
    129a:	77 fd       	sbrc	r23, 7
    129c:	04 d0       	rcall	.+8      	; 0x12a6 <__divmodhi4_neg2>
    129e:	0c d0       	rcall	.+24     	; 0x12b8 <__udivmodhi4>
    12a0:	06 d0       	rcall	.+12     	; 0x12ae <__divmodhi4_neg1>
    12a2:	00 20       	and	r0, r0
    12a4:	1a f4       	brpl	.+6      	; 0x12ac <__divmodhi4_exit>

000012a6 <__divmodhi4_neg2>:
    12a6:	70 95       	com	r23
    12a8:	61 95       	neg	r22
    12aa:	7f 4f       	sbci	r23, 0xFF	; 255

000012ac <__divmodhi4_exit>:
    12ac:	08 95       	ret

000012ae <__divmodhi4_neg1>:
    12ae:	f6 f7       	brtc	.-4      	; 0x12ac <__divmodhi4_exit>
    12b0:	90 95       	com	r25
    12b2:	81 95       	neg	r24
    12b4:	9f 4f       	sbci	r25, 0xFF	; 255
    12b6:	08 95       	ret

000012b8 <__udivmodhi4>:
    12b8:	aa 1b       	sub	r26, r26
    12ba:	bb 1b       	sub	r27, r27
    12bc:	51 e1       	ldi	r21, 0x11	; 17
    12be:	07 c0       	rjmp	.+14     	; 0x12ce <__udivmodhi4_ep>

000012c0 <__udivmodhi4_loop>:
    12c0:	aa 1f       	adc	r26, r26
    12c2:	bb 1f       	adc	r27, r27
    12c4:	a6 17       	cp	r26, r22
    12c6:	b7 07       	cpc	r27, r23
    12c8:	10 f0       	brcs	.+4      	; 0x12ce <__udivmodhi4_ep>
    12ca:	a6 1b       	sub	r26, r22
    12cc:	b7 0b       	sbc	r27, r23

000012ce <__udivmodhi4_ep>:
    12ce:	88 1f       	adc	r24, r24
    12d0:	99 1f       	adc	r25, r25
    12d2:	5a 95       	dec	r21
    12d4:	a9 f7       	brne	.-22     	; 0x12c0 <__udivmodhi4_loop>
    12d6:	80 95       	com	r24
    12d8:	90 95       	com	r25
    12da:	bc 01       	movw	r22, r24
    12dc:	cd 01       	movw	r24, r26
    12de:	08 95       	ret

000012e0 <__prologue_saves__>:
    12e0:	2f 92       	push	r2
    12e2:	3f 92       	push	r3
    12e4:	4f 92       	push	r4
    12e6:	5f 92       	push	r5
    12e8:	6f 92       	push	r6
    12ea:	7f 92       	push	r7
    12ec:	8f 92       	push	r8
    12ee:	9f 92       	push	r9
    12f0:	af 92       	push	r10
    12f2:	bf 92       	push	r11
    12f4:	cf 92       	push	r12
    12f6:	df 92       	push	r13
    12f8:	ef 92       	push	r14
    12fa:	ff 92       	push	r15
    12fc:	0f 93       	push	r16
    12fe:	1f 93       	push	r17
    1300:	cf 93       	push	r28
    1302:	df 93       	push	r29
    1304:	cd b7       	in	r28, 0x3d	; 61
    1306:	de b7       	in	r29, 0x3e	; 62
    1308:	ca 1b       	sub	r28, r26
    130a:	db 0b       	sbc	r29, r27
    130c:	0f b6       	in	r0, 0x3f	; 63
    130e:	f8 94       	cli
    1310:	de bf       	out	0x3e, r29	; 62
    1312:	0f be       	out	0x3f, r0	; 63
    1314:	cd bf       	out	0x3d, r28	; 61
    1316:	09 94       	ijmp

00001318 <__epilogue_restores__>:
    1318:	2a 88       	ldd	r2, Y+18	; 0x12
    131a:	39 88       	ldd	r3, Y+17	; 0x11
    131c:	48 88       	ldd	r4, Y+16	; 0x10
    131e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1320:	6e 84       	ldd	r6, Y+14	; 0x0e
    1322:	7d 84       	ldd	r7, Y+13	; 0x0d
    1324:	8c 84       	ldd	r8, Y+12	; 0x0c
    1326:	9b 84       	ldd	r9, Y+11	; 0x0b
    1328:	aa 84       	ldd	r10, Y+10	; 0x0a
    132a:	b9 84       	ldd	r11, Y+9	; 0x09
    132c:	c8 84       	ldd	r12, Y+8	; 0x08
    132e:	df 80       	ldd	r13, Y+7	; 0x07
    1330:	ee 80       	ldd	r14, Y+6	; 0x06
    1332:	fd 80       	ldd	r15, Y+5	; 0x05
    1334:	0c 81       	ldd	r16, Y+4	; 0x04
    1336:	1b 81       	ldd	r17, Y+3	; 0x03
    1338:	aa 81       	ldd	r26, Y+2	; 0x02
    133a:	b9 81       	ldd	r27, Y+1	; 0x01
    133c:	ce 0f       	add	r28, r30
    133e:	d1 1d       	adc	r29, r1
    1340:	0f b6       	in	r0, 0x3f	; 63
    1342:	f8 94       	cli
    1344:	de bf       	out	0x3e, r29	; 62
    1346:	0f be       	out	0x3f, r0	; 63
    1348:	cd bf       	out	0x3d, r28	; 61
    134a:	ed 01       	movw	r28, r26
    134c:	08 95       	ret

0000134e <_exit>:
    134e:	f8 94       	cli

00001350 <__stop_program>:
    1350:	ff cf       	rjmp	.-2      	; 0x1350 <__stop_program>
